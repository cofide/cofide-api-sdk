// Copyright 2024 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package proto.cofidectl_plugin.v1alpha2;

import "proto/ap_binding/v1alpha1/ap_binding.proto";
import "proto/attestation_policy/v1alpha1/attestation_policy.proto";
import "proto/cluster/v1alpha1/cluster.proto";
import "proto/federation/v1alpha1/federation.proto";
import "proto/trust_zone/v1alpha1/trust_zone.proto";

option go_package = "github.com/cofide/cofide-api-sdk/gen/go/proto/cofidectl_plugin/v1alpha2";

service DataSourcePluginService {
  rpc Validate(ValidateRequest) returns (ValidateResponse);

  rpc AddTrustZone(AddTrustZoneRequest) returns (AddTrustZoneResponse);
  rpc DestroyTrustZone(DestroyTrustZoneRequest) returns (DestroyTrustZoneResponse);
  rpc GetTrustZone(GetTrustZoneRequest) returns (GetTrustZoneResponse);
  rpc ListTrustZones(ListTrustZonesRequest) returns (ListTrustZonesResponse);
  rpc UpdateTrustZone(UpdateTrustZoneRequest) returns (UpdateTrustZoneResponse);

  rpc AddCluster(AddClusterRequest) returns (AddClusterResponse);
  rpc DestroyCluster(DestroyClusterRequest) returns (DestroyClusterResponse);
  rpc GetCluster(GetClusterRequest) returns (GetClusterResponse);
  rpc ListClusters(ListClustersRequest) returns (ListClustersResponse);
  rpc UpdateCluster(UpdateClusterRequest) returns (UpdateClusterResponse);

  rpc AddAttestationPolicy(AddAttestationPolicyRequest) returns (AddAttestationPolicyResponse);
  rpc DestroyAttestationPolicy(DestroyAttestationPolicyRequest) returns (DestroyAttestationPolicyResponse);
  rpc GetAttestationPolicy(GetAttestationPolicyRequest) returns (GetAttestationPolicyResponse);
  rpc ListAttestationPolicies(ListAttestationPoliciesRequest) returns (ListAttestationPoliciesResponse);

  rpc AddAPBinding(AddAPBindingRequest) returns (AddAPBindingResponse);
  rpc DestroyAPBinding(DestroyAPBindingRequest) returns (DestroyAPBindingResponse);
  rpc ListAPBindings(ListAPBindingsRequest) returns (ListAPBindingsResponse);

  rpc AddFederation(AddFederationRequest) returns (AddFederationResponse);
  rpc DestroyFederation(DestroyFederationRequest) returns (DestroyFederationResponse);
  rpc ListFederations(ListFederationsRequest) returns (ListFederationsResponse);
}

message ValidateRequest {}

message ValidateResponse {}

message AddTrustZoneRequest {
  optional proto.trust_zone.v1alpha1.TrustZone trust_zone = 1;
}

message AddTrustZoneResponse {
  optional proto.trust_zone.v1alpha1.TrustZone trust_zone = 1;
}

message DestroyTrustZoneRequest {
  optional string id = 1;
}

message DestroyTrustZoneResponse {}

message GetTrustZoneRequest {
  optional string name = 1;
  optional string id = 2;
}

message GetTrustZoneResponse {
  optional proto.trust_zone.v1alpha1.TrustZone trust_zone = 1;
}

message ListTrustZonesRequest {}

message ListTrustZonesResponse {
  repeated proto.trust_zone.v1alpha1.TrustZone trust_zones = 1;
}

message UpdateTrustZoneRequest {
  optional proto.trust_zone.v1alpha1.TrustZone trust_zone = 1;
}

message UpdateTrustZoneResponse {
  optional proto.trust_zone.v1alpha1.TrustZone trust_zone = 1;
}

message AddClusterRequest {
  optional proto.cluster.v1alpha1.Cluster cluster = 1;
}

message AddClusterResponse {
  optional proto.cluster.v1alpha1.Cluster cluster = 1;
}

message DestroyClusterRequest {
  optional string name = 1;
  optional string trust_zone_id = 2;
  optional string id = 3;
}

message DestroyClusterResponse {}

message GetClusterRequest {
  optional string name = 1;
  optional string trust_zone_id = 2;
  optional string id = 3;
}

message GetClusterResponse {
  optional proto.cluster.v1alpha1.Cluster cluster = 1;
}

message ListClustersRequest {
  optional string trust_zone_id = 1;
}

message ListClustersResponse {
  repeated proto.cluster.v1alpha1.Cluster clusters = 1;
}

message UpdateClusterRequest {
  optional proto.cluster.v1alpha1.Cluster cluster = 1;
}

message UpdateClusterResponse {
  optional proto.cluster.v1alpha1.Cluster cluster = 1;
}

message AddAttestationPolicyRequest {
  optional proto.attestation_policy.v1alpha1.AttestationPolicy policy = 1;
}

message AddAttestationPolicyResponse {
  optional proto.attestation_policy.v1alpha1.AttestationPolicy policy = 1;
}

message DestroyAttestationPolicyRequest {
  optional string id = 1;
}

message DestroyAttestationPolicyResponse {}

message GetAttestationPolicyRequest {
  optional string id = 1;
}

message GetAttestationPolicyResponse {
  proto.attestation_policy.v1alpha1.AttestationPolicy policy = 1;
}

message ListAttestationPoliciesRequest {}

message ListAttestationPoliciesResponse {
  repeated proto.attestation_policy.v1alpha1.AttestationPolicy policies = 1;
}

message AddAPBindingRequest {
  optional proto.ap_binding.v1alpha1.APBinding binding = 1;
}

message AddAPBindingResponse {
  optional proto.ap_binding.v1alpha1.APBinding binding = 1;
}

message DestroyAPBindingRequest {
  optional string id = 1;
}

message DestroyAPBindingResponse {}

message ListAPBindingsRequest {
  message Filter {
    optional string trust_zone_id = 1;
    optional string policy_id = 2;
  }
  optional Filter filter = 1;
}

message ListAPBindingsResponse {
  repeated proto.ap_binding.v1alpha1.APBinding bindings = 1;
}

message AddFederationRequest {
  optional proto.federation.v1alpha1.Federation federation = 1;
}

message AddFederationResponse {
  optional proto.federation.v1alpha1.Federation federation = 1;
}

message DestroyFederationRequest {
  optional string id = 1;
}

message DestroyFederationResponse {}

message ListFederationsRequest {
  message Filter {
    optional string trust_zone_id = 1;
  }
  optional Filter filter = 1;
}

message ListFederationsResponse {
  repeated proto.federation.v1alpha1.Federation federations = 1;
}
