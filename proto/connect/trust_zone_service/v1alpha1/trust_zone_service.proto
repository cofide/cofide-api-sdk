// Copyright 2025 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package proto.connect.trust_zone_service.v1alpha1;

import "proto/cluster/v1alpha1/cluster.proto";
import "proto/spire/api/types/bundle.proto";
import "proto/trust_zone/v1alpha1/trust_zone.proto";

option go_package = "github.com/cofide/cofide-api-sdk/gen/go/proto/trust_zone_service/v1alpha1";

service TrustZoneService {
  rpc CreateTrustZone(CreateTrustZoneRequest) returns (CreateTrustZoneResponse) {}
  rpc ListTrustZones(ListTrustZonesRequest) returns (ListTrustZonesResponse) {}
  rpc GetTrustZoneDetails(GetTrustZoneDetailsRequest) returns (GetTrustZoneDetailsResponse) {}

  // DEPRECATED: Agent join token creation moved to AgentService.CreateAgentJoinToken.
  // Cluster creation to be moved to ClusterService.CreateCluster.
  rpc RegisterCluster(RegisterClusterRequest) returns (RegisterClusterResponse) {}

  rpc RegisterAgent(RegisterAgentRequest) returns (RegisterAgentResponse) {}
}

message Agent {
  string agent_id = 1;
  string cluster_id = 2;
  string trust_zone_id = 3;
}

message CreateTrustZoneRequest {
  proto.trust_zone.v1alpha1.TrustZone trust_zone = 1;
}

message CreateTrustZoneResponse {
  proto.trust_zone.v1alpha1.TrustZone trust_zone = 1;
  // FIXME: gRPC status?
  bool success = 3;
  string message = 4;
}

message ListTrustZonesRequest {
  message Filter {
    optional string name = 1;
    optional string trust_domain = 2;
  }
  optional Filter filter = 1;
}

message ListTrustZonesResponse {
  repeated proto.trust_zone.v1alpha1.TrustZone trust_zones = 1;
}

message GetTrustZoneDetailsRequest {
  string trust_zone_id = 1;
}

message GetTrustZoneDetailsResponse {
  proto.trust_zone.v1alpha1.TrustZone trust_zone = 1;
}

message RegisterClusterRequest {
  string trust_zone_id = 1;
  proto.cluster.v1alpha1.Cluster cluster = 2;
}

message RegisterClusterResponse {
  string agent_token = 1;
  bool success = 2;
  string message = 3;
}

message RegisterAgentRequest {
  Agent agent = 1;
  string agent_token = 2;
  spire.api.types.Bundle bundle = 3;
}

message RegisterAgentResponse {
  bool success = 1;
  string message = 2;
  string agent_id = 3;
}
