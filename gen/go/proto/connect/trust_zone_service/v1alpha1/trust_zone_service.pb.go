// Copyright 2025 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: proto/connect/trust_zone_service/v1alpha1/trust_zone_service.proto

package v1alpha1

import (
	types "github.com/spiffe/spire-api-sdk/proto/spire/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrustZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trustzone   string        `protobuf:"bytes,1,opt,name=trustzone,proto3" json:"trustzone,omitempty"`
	OrgId       string        `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Bundle      *types.Bundle `protobuf:"bytes,3,opt,name=bundle,proto3" json:"bundle,omitempty"`
	TrustzoneId string        `protobuf:"bytes,4,opt,name=trustzone_id,json=trustzoneId,proto3" json:"trustzone_id,omitempty"`
}

func (x *TrustZone) Reset() {
	*x = TrustZone{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustZone) ProtoMessage() {}

func (x *TrustZone) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustZone.ProtoReflect.Descriptor instead.
func (*TrustZone) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{0}
}

func (x *TrustZone) GetTrustzone() string {
	if x != nil {
		return x.Trustzone
	}
	return ""
}

func (x *TrustZone) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *TrustZone) GetBundle() *types.Bundle {
	if x != nil {
		return x.Bundle
	}
	return nil
}

func (x *TrustZone) GetTrustzoneId() string {
	if x != nil {
		return x.TrustzoneId
	}
	return ""
}

type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId     string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	ClusterId   string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	TrustzoneId string `protobuf:"bytes,3,opt,name=trustzone_id,json=trustzoneId,proto3" json:"trustzone_id,omitempty"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{1}
}

func (x *Agent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Agent) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Agent) GetTrustzoneId() string {
	if x != nil {
		return x.TrustzoneId
	}
	return ""
}

type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName  string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	OidcEndpoint string `protobuf:"bytes,2,opt,name=oidc_endpoint,json=oidcEndpoint,proto3" json:"oidc_endpoint,omitempty"`
	OidcPubKey   string `protobuf:"bytes,3,opt,name=oidc_pub_key,json=oidcPubKey,proto3" json:"oidc_pub_key,omitempty"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{2}
}

func (x *Cluster) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Cluster) GetOidcEndpoint() string {
	if x != nil {
		return x.OidcEndpoint
	}
	return ""
}

func (x *Cluster) GetOidcPubKey() string {
	if x != nil {
		return x.OidcPubKey
	}
	return ""
}

type ConnectEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustzoneId string `protobuf:"bytes,1,opt,name=trustzone_id,json=trustzoneId,proto3" json:"trustzone_id,omitempty"`
	Enabled     bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ConnectEndpoint) Reset() {
	*x = ConnectEndpoint{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectEndpoint) ProtoMessage() {}

func (x *ConnectEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectEndpoint.ProtoReflect.Descriptor instead.
func (*ConnectEndpoint) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectEndpoint) GetTrustzoneId() string {
	if x != nil {
		return x.TrustzoneId
	}
	return ""
}

func (x *ConnectEndpoint) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConnectEndpoint) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CreateTrustZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trustzone *TrustZone `protobuf:"bytes,1,opt,name=trustzone,proto3" json:"trustzone,omitempty"`
}

func (x *CreateTrustZoneRequest) Reset() {
	*x = CreateTrustZoneRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTrustZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrustZoneRequest) ProtoMessage() {}

func (x *CreateTrustZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrustZoneRequest.ProtoReflect.Descriptor instead.
func (*CreateTrustZoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTrustZoneRequest) GetTrustzone() *TrustZone {
	if x != nil {
		return x.Trustzone
	}
	return nil
}

type CreateTrustZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trustzone          *TrustZone `protobuf:"bytes,1,opt,name=trustzone,proto3" json:"trustzone,omitempty"`
	FederationEndpoint string     `protobuf:"bytes,2,opt,name=federation_endpoint,json=federationEndpoint,proto3" json:"federation_endpoint,omitempty"`
	Success            bool       `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Message            string     `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateTrustZoneResponse) Reset() {
	*x = CreateTrustZoneResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTrustZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrustZoneResponse) ProtoMessage() {}

func (x *CreateTrustZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrustZoneResponse.ProtoReflect.Descriptor instead.
func (*CreateTrustZoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTrustZoneResponse) GetTrustzone() *TrustZone {
	if x != nil {
		return x.Trustzone
	}
	return nil
}

func (x *CreateTrustZoneResponse) GetFederationEndpoint() string {
	if x != nil {
		return x.FederationEndpoint
	}
	return ""
}

func (x *CreateTrustZoneResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateTrustZoneResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListTrustZonesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
}

func (x *ListTrustZonesRequest) Reset() {
	*x = ListTrustZonesRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTrustZonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrustZonesRequest) ProtoMessage() {}

func (x *ListTrustZonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrustZonesRequest.ProtoReflect.Descriptor instead.
func (*ListTrustZonesRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListTrustZonesRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type ListTrustZonesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trustzones []*TrustZone `protobuf:"bytes,1,rep,name=trustzones,proto3" json:"trustzones,omitempty"`
}

func (x *ListTrustZonesResponse) Reset() {
	*x = ListTrustZonesResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTrustZonesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrustZonesResponse) ProtoMessage() {}

func (x *ListTrustZonesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrustZonesResponse.ProtoReflect.Descriptor instead.
func (*ListTrustZonesResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListTrustZonesResponse) GetTrustzones() []*TrustZone {
	if x != nil {
		return x.Trustzones
	}
	return nil
}

type GetTrustZoneDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustzoneId string `protobuf:"bytes,1,opt,name=trustzone_id,json=trustzoneId,proto3" json:"trustzone_id,omitempty"`
}

func (x *GetTrustZoneDetailsRequest) Reset() {
	*x = GetTrustZoneDetailsRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrustZoneDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrustZoneDetailsRequest) ProtoMessage() {}

func (x *GetTrustZoneDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrustZoneDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetTrustZoneDetailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetTrustZoneDetailsRequest) GetTrustzoneId() string {
	if x != nil {
		return x.TrustzoneId
	}
	return ""
}

type GetTrustZoneDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trustzone *TrustZone `protobuf:"bytes,1,opt,name=trustzone,proto3" json:"trustzone,omitempty"`
}

func (x *GetTrustZoneDetailsResponse) Reset() {
	*x = GetTrustZoneDetailsResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrustZoneDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrustZoneDetailsResponse) ProtoMessage() {}

func (x *GetTrustZoneDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrustZoneDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetTrustZoneDetailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetTrustZoneDetailsResponse) GetTrustzone() *TrustZone {
	if x != nil {
		return x.Trustzone
	}
	return nil
}

type RegisterClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustzoneId string   `protobuf:"bytes,1,opt,name=trustzone_id,json=trustzoneId,proto3" json:"trustzone_id,omitempty"`
	Cluster     *Cluster `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *RegisterClusterRequest) Reset() {
	*x = RegisterClusterRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterClusterRequest) ProtoMessage() {}

func (x *RegisterClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterClusterRequest.ProtoReflect.Descriptor instead.
func (*RegisterClusterRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterClusterRequest) GetTrustzoneId() string {
	if x != nil {
		return x.TrustzoneId
	}
	return ""
}

func (x *RegisterClusterRequest) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type RegisterClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentToken string `protobuf:"bytes,1,opt,name=agent_token,json=agentToken,proto3" json:"agent_token,omitempty"`
	Success    bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RegisterClusterResponse) Reset() {
	*x = RegisterClusterResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterClusterResponse) ProtoMessage() {}

func (x *RegisterClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterClusterResponse.ProtoReflect.Descriptor instead.
func (*RegisterClusterResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterClusterResponse) GetAgentToken() string {
	if x != nil {
		return x.AgentToken
	}
	return ""
}

func (x *RegisterClusterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterClusterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RegisterAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent      *Agent        `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	AgentToken string        `protobuf:"bytes,2,opt,name=agent_token,json=agentToken,proto3" json:"agent_token,omitempty"`
	Bundle     *types.Bundle `protobuf:"bytes,3,opt,name=bundle,proto3" json:"bundle,omitempty"`
}

func (x *RegisterAgentRequest) Reset() {
	*x = RegisterAgentRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAgentRequest) ProtoMessage() {}

func (x *RegisterAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAgentRequest.ProtoReflect.Descriptor instead.
func (*RegisterAgentRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterAgentRequest) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *RegisterAgentRequest) GetAgentToken() string {
	if x != nil {
		return x.AgentToken
	}
	return ""
}

func (x *RegisterAgentRequest) GetBundle() *types.Bundle {
	if x != nil {
		return x.Bundle
	}
	return nil
}

type RegisterAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AgentId string `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *RegisterAgentResponse) Reset() {
	*x = RegisterAgentResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAgentResponse) ProtoMessage() {}

func (x *RegisterAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAgentResponse.ProtoReflect.Descriptor instead.
func (*RegisterAgentResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{13}
}

func (x *RegisterAgentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterAgentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterAgentResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

var File_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto protoreflect.FileDescriptor

var file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDesc = []byte{
	0x0a, 0x42, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2f,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a,
	0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x09, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x05, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x22, 0x73, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x69, 0x64, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x70, 0x75, 0x62, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x69, 0x64, 0x63, 0x50,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x62, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6c, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a,
	0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x52, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x3f, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x71, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65,
	0x22, 0x89, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x4c,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x6e, 0x0a, 0x17,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb0, 0x01, 0x0a,
	0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f,
	0x0a, 0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x66, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0xa6, 0x06, 0x0a, 0x10, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9a, 0x01, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x12, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x40, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0xa6, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x45, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9a, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x0d, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x66, 0x69, 0x64, 0x65, 0x2f, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x2d, 0x61, 0x70, 0x69,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescOnce sync.Once
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescData = file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDesc
)

func file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP() []byte {
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescOnce.Do(func() {
		file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescData)
	})
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescData
}

var file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_goTypes = []any{
	(*TrustZone)(nil),                   // 0: proto.connect.trust_zone_service.v1alpha1.TrustZone
	(*Agent)(nil),                       // 1: proto.connect.trust_zone_service.v1alpha1.Agent
	(*Cluster)(nil),                     // 2: proto.connect.trust_zone_service.v1alpha1.Cluster
	(*ConnectEndpoint)(nil),             // 3: proto.connect.trust_zone_service.v1alpha1.ConnectEndpoint
	(*CreateTrustZoneRequest)(nil),      // 4: proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneRequest
	(*CreateTrustZoneResponse)(nil),     // 5: proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneResponse
	(*ListTrustZonesRequest)(nil),       // 6: proto.connect.trust_zone_service.v1alpha1.ListTrustZonesRequest
	(*ListTrustZonesResponse)(nil),      // 7: proto.connect.trust_zone_service.v1alpha1.ListTrustZonesResponse
	(*GetTrustZoneDetailsRequest)(nil),  // 8: proto.connect.trust_zone_service.v1alpha1.GetTrustZoneDetailsRequest
	(*GetTrustZoneDetailsResponse)(nil), // 9: proto.connect.trust_zone_service.v1alpha1.GetTrustZoneDetailsResponse
	(*RegisterClusterRequest)(nil),      // 10: proto.connect.trust_zone_service.v1alpha1.RegisterClusterRequest
	(*RegisterClusterResponse)(nil),     // 11: proto.connect.trust_zone_service.v1alpha1.RegisterClusterResponse
	(*RegisterAgentRequest)(nil),        // 12: proto.connect.trust_zone_service.v1alpha1.RegisterAgentRequest
	(*RegisterAgentResponse)(nil),       // 13: proto.connect.trust_zone_service.v1alpha1.RegisterAgentResponse
	(*types.Bundle)(nil),                // 14: spire.api.types.Bundle
}
var file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_depIdxs = []int32{
	14, // 0: proto.connect.trust_zone_service.v1alpha1.TrustZone.bundle:type_name -> spire.api.types.Bundle
	0,  // 1: proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneRequest.trustzone:type_name -> proto.connect.trust_zone_service.v1alpha1.TrustZone
	0,  // 2: proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneResponse.trustzone:type_name -> proto.connect.trust_zone_service.v1alpha1.TrustZone
	0,  // 3: proto.connect.trust_zone_service.v1alpha1.ListTrustZonesResponse.trustzones:type_name -> proto.connect.trust_zone_service.v1alpha1.TrustZone
	0,  // 4: proto.connect.trust_zone_service.v1alpha1.GetTrustZoneDetailsResponse.trustzone:type_name -> proto.connect.trust_zone_service.v1alpha1.TrustZone
	2,  // 5: proto.connect.trust_zone_service.v1alpha1.RegisterClusterRequest.cluster:type_name -> proto.connect.trust_zone_service.v1alpha1.Cluster
	1,  // 6: proto.connect.trust_zone_service.v1alpha1.RegisterAgentRequest.agent:type_name -> proto.connect.trust_zone_service.v1alpha1.Agent
	14, // 7: proto.connect.trust_zone_service.v1alpha1.RegisterAgentRequest.bundle:type_name -> spire.api.types.Bundle
	4,  // 8: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.CreateTrustZone:input_type -> proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneRequest
	6,  // 9: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.ListTrustZones:input_type -> proto.connect.trust_zone_service.v1alpha1.ListTrustZonesRequest
	8,  // 10: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.GetTrustZoneDetails:input_type -> proto.connect.trust_zone_service.v1alpha1.GetTrustZoneDetailsRequest
	10, // 11: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.RegisterCluster:input_type -> proto.connect.trust_zone_service.v1alpha1.RegisterClusterRequest
	12, // 12: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.RegisterAgent:input_type -> proto.connect.trust_zone_service.v1alpha1.RegisterAgentRequest
	5,  // 13: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.CreateTrustZone:output_type -> proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneResponse
	7,  // 14: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.ListTrustZones:output_type -> proto.connect.trust_zone_service.v1alpha1.ListTrustZonesResponse
	9,  // 15: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.GetTrustZoneDetails:output_type -> proto.connect.trust_zone_service.v1alpha1.GetTrustZoneDetailsResponse
	11, // 16: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.RegisterCluster:output_type -> proto.connect.trust_zone_service.v1alpha1.RegisterClusterResponse
	13, // 17: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.RegisterAgent:output_type -> proto.connect.trust_zone_service.v1alpha1.RegisterAgentResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_init() }
func file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_init() {
	if File_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_goTypes,
		DependencyIndexes: file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_depIdxs,
		MessageInfos:      file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes,
	}.Build()
	File_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto = out.File
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDesc = nil
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_goTypes = nil
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_depIdxs = nil
}
