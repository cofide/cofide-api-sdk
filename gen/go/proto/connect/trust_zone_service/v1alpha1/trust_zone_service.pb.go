// Copyright 2025 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/connect/trust_zone_service/v1alpha1/trust_zone_service.proto

package v1alpha1

import (
	v1alpha1 "github.com/cofide/cofide-api-sdk/gen/go/proto/trust_zone/v1alpha1"
	types "github.com/spiffe/spire-api-sdk/proto/spire/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Agent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	ClusterId     string                 `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	TrustZoneId   string                 `protobuf:"bytes,3,opt,name=trust_zone_id,json=trustZoneId,proto3" json:"trust_zone_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent) Reset() {
	*x = Agent{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{0}
}

func (x *Agent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Agent) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Agent) GetTrustZoneId() string {
	if x != nil {
		return x.TrustZoneId
	}
	return ""
}

type TrustZoneServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	TrustZoneId   string                 `protobuf:"bytes,2,opt,name=trust_zone_id,json=trustZoneId,proto3" json:"trust_zone_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrustZoneServer) Reset() {
	*x = TrustZoneServer{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustZoneServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustZoneServer) ProtoMessage() {}

func (x *TrustZoneServer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustZoneServer.ProtoReflect.Descriptor instead.
func (*TrustZoneServer) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{1}
}

func (x *TrustZoneServer) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *TrustZoneServer) GetTrustZoneId() string {
	if x != nil {
		return x.TrustZoneId
	}
	return ""
}

type CreateTrustZoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrustZone     *v1alpha1.TrustZone    `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3" json:"trust_zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTrustZoneRequest) Reset() {
	*x = CreateTrustZoneRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTrustZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrustZoneRequest) ProtoMessage() {}

func (x *CreateTrustZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrustZoneRequest.ProtoReflect.Descriptor instead.
func (*CreateTrustZoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTrustZoneRequest) GetTrustZone() *v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZone
	}
	return nil
}

type CreateTrustZoneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrustZone     *v1alpha1.TrustZone    `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3" json:"trust_zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTrustZoneResponse) Reset() {
	*x = CreateTrustZoneResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTrustZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrustZoneResponse) ProtoMessage() {}

func (x *CreateTrustZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrustZoneResponse.ProtoReflect.Descriptor instead.
func (*CreateTrustZoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTrustZoneResponse) GetTrustZone() *v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZone
	}
	return nil
}

type DestroyTrustZoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrustZoneId   *string                `protobuf:"bytes,1,opt,name=trust_zone_id,json=trustZoneId,proto3,oneof" json:"trust_zone_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyTrustZoneRequest) Reset() {
	*x = DestroyTrustZoneRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyTrustZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyTrustZoneRequest) ProtoMessage() {}

func (x *DestroyTrustZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyTrustZoneRequest.ProtoReflect.Descriptor instead.
func (*DestroyTrustZoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{4}
}

func (x *DestroyTrustZoneRequest) GetTrustZoneId() string {
	if x != nil && x.TrustZoneId != nil {
		return *x.TrustZoneId
	}
	return ""
}

type DestroyTrustZoneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyTrustZoneResponse) Reset() {
	*x = DestroyTrustZoneResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyTrustZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyTrustZoneResponse) ProtoMessage() {}

func (x *DestroyTrustZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyTrustZoneResponse.ProtoReflect.Descriptor instead.
func (*DestroyTrustZoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{5}
}

type GetTrustZoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrustZoneId   *string                `protobuf:"bytes,1,opt,name=trust_zone_id,json=trustZoneId,proto3,oneof" json:"trust_zone_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrustZoneRequest) Reset() {
	*x = GetTrustZoneRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrustZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrustZoneRequest) ProtoMessage() {}

func (x *GetTrustZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrustZoneRequest.ProtoReflect.Descriptor instead.
func (*GetTrustZoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetTrustZoneRequest) GetTrustZoneId() string {
	if x != nil && x.TrustZoneId != nil {
		return *x.TrustZoneId
	}
	return ""
}

type GetTrustZoneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrustZone     *v1alpha1.TrustZone    `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3,oneof" json:"trust_zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrustZoneResponse) Reset() {
	*x = GetTrustZoneResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrustZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrustZoneResponse) ProtoMessage() {}

func (x *GetTrustZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrustZoneResponse.ProtoReflect.Descriptor instead.
func (*GetTrustZoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetTrustZoneResponse) GetTrustZone() *v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZone
	}
	return nil
}

type ListTrustZonesRequest struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Filter        *ListTrustZonesRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTrustZonesRequest) Reset() {
	*x = ListTrustZonesRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTrustZonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrustZonesRequest) ProtoMessage() {}

func (x *ListTrustZonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrustZonesRequest.ProtoReflect.Descriptor instead.
func (*ListTrustZonesRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListTrustZonesRequest) GetFilter() *ListTrustZonesRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListTrustZonesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrustZones    []*v1alpha1.TrustZone  `protobuf:"bytes,1,rep,name=trust_zones,json=trustZones,proto3" json:"trust_zones,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTrustZonesResponse) Reset() {
	*x = ListTrustZonesResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTrustZonesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrustZonesResponse) ProtoMessage() {}

func (x *ListTrustZonesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrustZonesResponse.ProtoReflect.Descriptor instead.
func (*ListTrustZonesResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListTrustZonesResponse) GetTrustZones() []*v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZones
	}
	return nil
}

type UpdateTrustZoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrustZone     *v1alpha1.TrustZone    `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3" json:"trust_zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTrustZoneRequest) Reset() {
	*x = UpdateTrustZoneRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTrustZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrustZoneRequest) ProtoMessage() {}

func (x *UpdateTrustZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrustZoneRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrustZoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTrustZoneRequest) GetTrustZone() *v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZone
	}
	return nil
}

type UpdateTrustZoneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrustZone     *v1alpha1.TrustZone    `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3" json:"trust_zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTrustZoneResponse) Reset() {
	*x = UpdateTrustZoneResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTrustZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrustZoneResponse) ProtoMessage() {}

func (x *UpdateTrustZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrustZoneResponse.ProtoReflect.Descriptor instead.
func (*UpdateTrustZoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTrustZoneResponse) GetTrustZone() *v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZone
	}
	return nil
}

type RegisterAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *Agent                 `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	AgentToken    string                 `protobuf:"bytes,2,opt,name=agent_token,json=agentToken,proto3" json:"agent_token,omitempty"`
	Bundle        *types.Bundle          `protobuf:"bytes,3,opt,name=bundle,proto3" json:"bundle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAgentRequest) Reset() {
	*x = RegisterAgentRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAgentRequest) ProtoMessage() {}

func (x *RegisterAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAgentRequest.ProtoReflect.Descriptor instead.
func (*RegisterAgentRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterAgentRequest) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *RegisterAgentRequest) GetAgentToken() string {
	if x != nil {
		return x.AgentToken
	}
	return ""
}

func (x *RegisterAgentRequest) GetBundle() *types.Bundle {
	if x != nil {
		return x.Bundle
	}
	return nil
}

type RegisterAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAgentResponse) Reset() {
	*x = RegisterAgentResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAgentResponse) ProtoMessage() {}

func (x *RegisterAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAgentResponse.ProtoReflect.Descriptor instead.
func (*RegisterAgentResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{13}
}

func (x *RegisterAgentResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type RegisterTrustZoneServerRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TrustZoneServer *TrustZoneServer       `protobuf:"bytes,1,opt,name=trust_zone_server,json=trustZoneServer,proto3" json:"trust_zone_server,omitempty"`
	Token           string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Bundle          *types.Bundle          `protobuf:"bytes,3,opt,name=bundle,proto3" json:"bundle,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RegisterTrustZoneServerRequest) Reset() {
	*x = RegisterTrustZoneServerRequest{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterTrustZoneServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTrustZoneServerRequest) ProtoMessage() {}

func (x *RegisterTrustZoneServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTrustZoneServerRequest.ProtoReflect.Descriptor instead.
func (*RegisterTrustZoneServerRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{14}
}

func (x *RegisterTrustZoneServerRequest) GetTrustZoneServer() *TrustZoneServer {
	if x != nil {
		return x.TrustZoneServer
	}
	return nil
}

func (x *RegisterTrustZoneServerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegisterTrustZoneServerRequest) GetBundle() *types.Bundle {
	if x != nil {
		return x.Bundle
	}
	return nil
}

type RegisterTrustZoneServerResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TrustZoneServerId string                 `protobuf:"bytes,1,opt,name=trust_zone_server_id,json=trustZoneServerId,proto3" json:"trust_zone_server_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterTrustZoneServerResponse) Reset() {
	*x = RegisterTrustZoneServerResponse{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterTrustZoneServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTrustZoneServerResponse) ProtoMessage() {}

func (x *RegisterTrustZoneServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTrustZoneServerResponse.ProtoReflect.Descriptor instead.
func (*RegisterTrustZoneServerResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{15}
}

func (x *RegisterTrustZoneServerResponse) GetTrustZoneServerId() string {
	if x != nil {
		return x.TrustZoneServerId
	}
	return ""
}

type ListTrustZonesRequest_Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	OrgId         *string                `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3,oneof" json:"org_id,omitempty"`
	TrustDomain   *string                `protobuf:"bytes,3,opt,name=trust_domain,json=trustDomain,proto3,oneof" json:"trust_domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTrustZonesRequest_Filter) Reset() {
	*x = ListTrustZonesRequest_Filter{}
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTrustZonesRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrustZonesRequest_Filter) ProtoMessage() {}

func (x *ListTrustZonesRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrustZonesRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListTrustZonesRequest_Filter) Descriptor() ([]byte, []int) {
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListTrustZonesRequest_Filter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListTrustZonesRequest_Filter) GetOrgId() string {
	if x != nil && x.OrgId != nil {
		return *x.OrgId
	}
	return ""
}

func (x *ListTrustZonesRequest_Filter) GetTrustDomain() string {
	if x != nil && x.TrustDomain != nil {
		return *x.TrustDomain
	}
	return ""
}

var File_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto protoreflect.FileDescriptor

var file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDesc = string([]byte{
	0x0a, 0x42, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2f,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a,
	0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x65, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x0f, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x52, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x5e, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x52, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x54, 0x0a, 0x17, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x22,
	0x6f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65,
	0x22, 0x95, 0x02, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x1a, 0x8a, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x0a, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x5e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x32, 0x0a, 0x15, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xcf, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x66, 0x0a, 0x11, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2f, 0x0a, 0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x22, 0x52, 0x0a, 0x1f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x32, 0xe6, 0x08, 0x0a, 0x10, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x41,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x42, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x40,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9a, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb2, 0x01, 0x0a, 0x17, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x4a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x53,
	0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x66,
	0x69, 0x64, 0x65, 0x2f, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescOnce sync.Once
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescData []byte
)

func file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescGZIP() []byte {
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescOnce.Do(func() {
		file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDesc), len(file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDesc)))
	})
	return file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDescData
}

var file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_goTypes = []any{
	(*Agent)(nil),                           // 0: proto.connect.trust_zone_service.v1alpha1.Agent
	(*TrustZoneServer)(nil),                 // 1: proto.connect.trust_zone_service.v1alpha1.TrustZoneServer
	(*CreateTrustZoneRequest)(nil),          // 2: proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneRequest
	(*CreateTrustZoneResponse)(nil),         // 3: proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneResponse
	(*DestroyTrustZoneRequest)(nil),         // 4: proto.connect.trust_zone_service.v1alpha1.DestroyTrustZoneRequest
	(*DestroyTrustZoneResponse)(nil),        // 5: proto.connect.trust_zone_service.v1alpha1.DestroyTrustZoneResponse
	(*GetTrustZoneRequest)(nil),             // 6: proto.connect.trust_zone_service.v1alpha1.GetTrustZoneRequest
	(*GetTrustZoneResponse)(nil),            // 7: proto.connect.trust_zone_service.v1alpha1.GetTrustZoneResponse
	(*ListTrustZonesRequest)(nil),           // 8: proto.connect.trust_zone_service.v1alpha1.ListTrustZonesRequest
	(*ListTrustZonesResponse)(nil),          // 9: proto.connect.trust_zone_service.v1alpha1.ListTrustZonesResponse
	(*UpdateTrustZoneRequest)(nil),          // 10: proto.connect.trust_zone_service.v1alpha1.UpdateTrustZoneRequest
	(*UpdateTrustZoneResponse)(nil),         // 11: proto.connect.trust_zone_service.v1alpha1.UpdateTrustZoneResponse
	(*RegisterAgentRequest)(nil),            // 12: proto.connect.trust_zone_service.v1alpha1.RegisterAgentRequest
	(*RegisterAgentResponse)(nil),           // 13: proto.connect.trust_zone_service.v1alpha1.RegisterAgentResponse
	(*RegisterTrustZoneServerRequest)(nil),  // 14: proto.connect.trust_zone_service.v1alpha1.RegisterTrustZoneServerRequest
	(*RegisterTrustZoneServerResponse)(nil), // 15: proto.connect.trust_zone_service.v1alpha1.RegisterTrustZoneServerResponse
	(*ListTrustZonesRequest_Filter)(nil),    // 16: proto.connect.trust_zone_service.v1alpha1.ListTrustZonesRequest.Filter
	(*v1alpha1.TrustZone)(nil),              // 17: proto.trust_zone.v1alpha1.TrustZone
	(*types.Bundle)(nil),                    // 18: spire.api.types.Bundle
}
var file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_depIdxs = []int32{
	17, // 0: proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneRequest.trust_zone:type_name -> proto.trust_zone.v1alpha1.TrustZone
	17, // 1: proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneResponse.trust_zone:type_name -> proto.trust_zone.v1alpha1.TrustZone
	17, // 2: proto.connect.trust_zone_service.v1alpha1.GetTrustZoneResponse.trust_zone:type_name -> proto.trust_zone.v1alpha1.TrustZone
	16, // 3: proto.connect.trust_zone_service.v1alpha1.ListTrustZonesRequest.filter:type_name -> proto.connect.trust_zone_service.v1alpha1.ListTrustZonesRequest.Filter
	17, // 4: proto.connect.trust_zone_service.v1alpha1.ListTrustZonesResponse.trust_zones:type_name -> proto.trust_zone.v1alpha1.TrustZone
	17, // 5: proto.connect.trust_zone_service.v1alpha1.UpdateTrustZoneRequest.trust_zone:type_name -> proto.trust_zone.v1alpha1.TrustZone
	17, // 6: proto.connect.trust_zone_service.v1alpha1.UpdateTrustZoneResponse.trust_zone:type_name -> proto.trust_zone.v1alpha1.TrustZone
	0,  // 7: proto.connect.trust_zone_service.v1alpha1.RegisterAgentRequest.agent:type_name -> proto.connect.trust_zone_service.v1alpha1.Agent
	18, // 8: proto.connect.trust_zone_service.v1alpha1.RegisterAgentRequest.bundle:type_name -> spire.api.types.Bundle
	1,  // 9: proto.connect.trust_zone_service.v1alpha1.RegisterTrustZoneServerRequest.trust_zone_server:type_name -> proto.connect.trust_zone_service.v1alpha1.TrustZoneServer
	18, // 10: proto.connect.trust_zone_service.v1alpha1.RegisterTrustZoneServerRequest.bundle:type_name -> spire.api.types.Bundle
	2,  // 11: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.CreateTrustZone:input_type -> proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneRequest
	4,  // 12: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.DestroyTrustZone:input_type -> proto.connect.trust_zone_service.v1alpha1.DestroyTrustZoneRequest
	6,  // 13: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.GetTrustZone:input_type -> proto.connect.trust_zone_service.v1alpha1.GetTrustZoneRequest
	8,  // 14: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.ListTrustZones:input_type -> proto.connect.trust_zone_service.v1alpha1.ListTrustZonesRequest
	10, // 15: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.UpdateTrustZone:input_type -> proto.connect.trust_zone_service.v1alpha1.UpdateTrustZoneRequest
	12, // 16: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.RegisterAgent:input_type -> proto.connect.trust_zone_service.v1alpha1.RegisterAgentRequest
	14, // 17: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.RegisterTrustZoneServer:input_type -> proto.connect.trust_zone_service.v1alpha1.RegisterTrustZoneServerRequest
	3,  // 18: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.CreateTrustZone:output_type -> proto.connect.trust_zone_service.v1alpha1.CreateTrustZoneResponse
	5,  // 19: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.DestroyTrustZone:output_type -> proto.connect.trust_zone_service.v1alpha1.DestroyTrustZoneResponse
	7,  // 20: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.GetTrustZone:output_type -> proto.connect.trust_zone_service.v1alpha1.GetTrustZoneResponse
	9,  // 21: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.ListTrustZones:output_type -> proto.connect.trust_zone_service.v1alpha1.ListTrustZonesResponse
	11, // 22: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.UpdateTrustZone:output_type -> proto.connect.trust_zone_service.v1alpha1.UpdateTrustZoneResponse
	13, // 23: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.RegisterAgent:output_type -> proto.connect.trust_zone_service.v1alpha1.RegisterAgentResponse
	15, // 24: proto.connect.trust_zone_service.v1alpha1.TrustZoneService.RegisterTrustZoneServer:output_type -> proto.connect.trust_zone_service.v1alpha1.RegisterTrustZoneServerResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_init() }
func file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_init() {
	if File_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto != nil {
		return
	}
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[6].OneofWrappers = []any{}
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[7].OneofWrappers = []any{}
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[8].OneofWrappers = []any{}
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDesc), len(file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_goTypes,
		DependencyIndexes: file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_depIdxs,
		MessageInfos:      file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_msgTypes,
	}.Build()
	File_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto = out.File
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_goTypes = nil
	file_proto_connect_trust_zone_service_v1alpha1_trust_zone_service_proto_depIdxs = nil
}
