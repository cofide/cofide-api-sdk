// Copyright 2025 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/connect/workload_service/v1alpha1/workload_service.proto

package v1alpha1

import (
	v1alpha1 "github.com/cofide/cofide-api-sdk/gen/go/proto/workload/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListWorkloadsRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Filter        *ListWorkloadsRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkloadsRequest) Reset() {
	*x = ListWorkloadsRequest{}
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkloadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsRequest) ProtoMessage() {}

func (x *ListWorkloadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkloadsRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListWorkloadsRequest) GetFilter() *ListWorkloadsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListWorkloadsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workloads     []*v1alpha1.Workload   `protobuf:"bytes,1,rep,name=workloads,proto3" json:"workloads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkloadsResponse) Reset() {
	*x = ListWorkloadsResponse{}
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkloadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsResponse) ProtoMessage() {}

func (x *ListWorkloadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkloadsResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListWorkloadsResponse) GetWorkloads() []*v1alpha1.Workload {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type PublishWorkloadEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workload      *v1alpha1.Workload     `protobuf:"bytes,1,opt,name=workload,proto3" json:"workload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishWorkloadEventsRequest) Reset() {
	*x = PublishWorkloadEventsRequest{}
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishWorkloadEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishWorkloadEventsRequest) ProtoMessage() {}

func (x *PublishWorkloadEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishWorkloadEventsRequest.ProtoReflect.Descriptor instead.
func (*PublishWorkloadEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescGZIP(), []int{2}
}

func (x *PublishWorkloadEventsRequest) GetWorkload() *v1alpha1.Workload {
	if x != nil {
		return x.Workload
	}
	return nil
}

type PublishWorkloadEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *string                `protobuf:"bytes,1,opt,name=message,proto3,oneof" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishWorkloadEventsResponse) Reset() {
	*x = PublishWorkloadEventsResponse{}
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishWorkloadEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishWorkloadEventsResponse) ProtoMessage() {}

func (x *PublishWorkloadEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishWorkloadEventsResponse.ProtoReflect.Descriptor instead.
func (*PublishWorkloadEventsResponse) Descriptor() ([]byte, []int) {
	return file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescGZIP(), []int{3}
}

func (x *PublishWorkloadEventsResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type ListWorkloadsRequest_Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     *string                `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3,oneof" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkloadsRequest_Filter) Reset() {
	*x = ListWorkloadsRequest_Filter{}
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkloadsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsRequest_Filter) ProtoMessage() {}

func (x *ListWorkloadsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListWorkloadsRequest_Filter) Descriptor() ([]byte, []int) {
	return file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ListWorkloadsRequest_Filter) GetClusterId() string {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return ""
}

var File_proto_connect_workload_service_v1alpha1_workload_service_proto protoreflect.FileDescriptor

var file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDesc = string([]byte{
	0x0a, 0x3e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc1, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x1a, 0x3b, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22,
	0x5d, 0x0a, 0x1c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x4a,
	0x0a, 0x1d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xd8, 0x02, 0x0a, 0x1a, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x15, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x28, 0x01, 0x12, 0x8e, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x2f, 0x63, 0x6f, 0x66, 0x69, 0x64,
	0x65, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescOnce sync.Once
	file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescData []byte
)

func file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescGZIP() []byte {
	file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescOnce.Do(func() {
		file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDesc), len(file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDesc)))
	})
	return file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDescData
}

var file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_connect_workload_service_v1alpha1_workload_service_proto_goTypes = []any{
	(*ListWorkloadsRequest)(nil),          // 0: proto.connect.workload_service.v1alpha1.ListWorkloadsRequest
	(*ListWorkloadsResponse)(nil),         // 1: proto.connect.workload_service.v1alpha1.ListWorkloadsResponse
	(*PublishWorkloadEventsRequest)(nil),  // 2: proto.connect.workload_service.v1alpha1.PublishWorkloadEventsRequest
	(*PublishWorkloadEventsResponse)(nil), // 3: proto.connect.workload_service.v1alpha1.PublishWorkloadEventsResponse
	(*ListWorkloadsRequest_Filter)(nil),   // 4: proto.connect.workload_service.v1alpha1.ListWorkloadsRequest.Filter
	(*v1alpha1.Workload)(nil),             // 5: proto.workload.v1alpha1.Workload
}
var file_proto_connect_workload_service_v1alpha1_workload_service_proto_depIdxs = []int32{
	4, // 0: proto.connect.workload_service.v1alpha1.ListWorkloadsRequest.filter:type_name -> proto.connect.workload_service.v1alpha1.ListWorkloadsRequest.Filter
	5, // 1: proto.connect.workload_service.v1alpha1.ListWorkloadsResponse.workloads:type_name -> proto.workload.v1alpha1.Workload
	5, // 2: proto.connect.workload_service.v1alpha1.PublishWorkloadEventsRequest.workload:type_name -> proto.workload.v1alpha1.Workload
	2, // 3: proto.connect.workload_service.v1alpha1.WorkloadObservationService.PublishWorkloadEvents:input_type -> proto.connect.workload_service.v1alpha1.PublishWorkloadEventsRequest
	0, // 4: proto.connect.workload_service.v1alpha1.WorkloadObservationService.ListWorkloads:input_type -> proto.connect.workload_service.v1alpha1.ListWorkloadsRequest
	3, // 5: proto.connect.workload_service.v1alpha1.WorkloadObservationService.PublishWorkloadEvents:output_type -> proto.connect.workload_service.v1alpha1.PublishWorkloadEventsResponse
	1, // 6: proto.connect.workload_service.v1alpha1.WorkloadObservationService.ListWorkloads:output_type -> proto.connect.workload_service.v1alpha1.ListWorkloadsResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_connect_workload_service_v1alpha1_workload_service_proto_init() }
func file_proto_connect_workload_service_v1alpha1_workload_service_proto_init() {
	if File_proto_connect_workload_service_v1alpha1_workload_service_proto != nil {
		return
	}
	file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDesc), len(file_proto_connect_workload_service_v1alpha1_workload_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_connect_workload_service_v1alpha1_workload_service_proto_goTypes,
		DependencyIndexes: file_proto_connect_workload_service_v1alpha1_workload_service_proto_depIdxs,
		MessageInfos:      file_proto_connect_workload_service_v1alpha1_workload_service_proto_msgTypes,
	}.Build()
	File_proto_connect_workload_service_v1alpha1_workload_service_proto = out.File
	file_proto_connect_workload_service_v1alpha1_workload_service_proto_goTypes = nil
	file_proto_connect_workload_service_v1alpha1_workload_service_proto_depIdxs = nil
}
