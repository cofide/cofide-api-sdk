// Copyright 2024 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: proto/cofidectl_plugin/v1alpha1/plugin.proto

package v1alpha1

import (
	v1alpha13 "github.com/cofide/cofide-api-sdk/gen/go/proto/ap_binding/v1alpha1"
	v1alpha12 "github.com/cofide/cofide-api-sdk/gen/go/proto/attestation_policy/v1alpha1"
	v1alpha11 "github.com/cofide/cofide-api-sdk/gen/go/proto/cluster/v1alpha1"
	v1alpha14 "github.com/cofide/cofide-api-sdk/gen/go/proto/federation/v1alpha1"
	v1alpha1 "github.com/cofide/cofide-api-sdk/gen/go/proto/trust_zone/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateRequest) Reset() {
	*x = ValidateRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRequest) ProtoMessage() {}

func (x *ValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRequest.ProtoReflect.Descriptor instead.
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{0}
}

type ValidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateResponse) Reset() {
	*x = ValidateResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateResponse) ProtoMessage() {}

func (x *ValidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateResponse.ProtoReflect.Descriptor instead.
func (*ValidateResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{1}
}

type AddTrustZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustZone *v1alpha1.TrustZone `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3,oneof" json:"trust_zone,omitempty"`
}

func (x *AddTrustZoneRequest) Reset() {
	*x = AddTrustZoneRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTrustZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTrustZoneRequest) ProtoMessage() {}

func (x *AddTrustZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTrustZoneRequest.ProtoReflect.Descriptor instead.
func (*AddTrustZoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *AddTrustZoneRequest) GetTrustZone() *v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZone
	}
	return nil
}

type AddTrustZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustZone *v1alpha1.TrustZone `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3,oneof" json:"trust_zone,omitempty"`
}

func (x *AddTrustZoneResponse) Reset() {
	*x = AddTrustZoneResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTrustZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTrustZoneResponse) ProtoMessage() {}

func (x *AddTrustZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTrustZoneResponse.ProtoReflect.Descriptor instead.
func (*AddTrustZoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *AddTrustZoneResponse) GetTrustZone() *v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZone
	}
	return nil
}

type GetTrustZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *GetTrustZoneRequest) Reset() {
	*x = GetTrustZoneRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrustZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrustZoneRequest) ProtoMessage() {}

func (x *GetTrustZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrustZoneRequest.ProtoReflect.Descriptor instead.
func (*GetTrustZoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *GetTrustZoneRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetTrustZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustZone *v1alpha1.TrustZone `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3,oneof" json:"trust_zone,omitempty"`
}

func (x *GetTrustZoneResponse) Reset() {
	*x = GetTrustZoneResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrustZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrustZoneResponse) ProtoMessage() {}

func (x *GetTrustZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrustZoneResponse.ProtoReflect.Descriptor instead.
func (*GetTrustZoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *GetTrustZoneResponse) GetTrustZone() *v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZone
	}
	return nil
}

type ListTrustZonesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTrustZonesRequest) Reset() {
	*x = ListTrustZonesRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTrustZonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrustZonesRequest) ProtoMessage() {}

func (x *ListTrustZonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrustZonesRequest.ProtoReflect.Descriptor instead.
func (*ListTrustZonesRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{6}
}

type ListTrustZonesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustZones []*v1alpha1.TrustZone `protobuf:"bytes,1,rep,name=trust_zones,json=trustZones,proto3" json:"trust_zones,omitempty"`
}

func (x *ListTrustZonesResponse) Reset() {
	*x = ListTrustZonesResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTrustZonesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrustZonesResponse) ProtoMessage() {}

func (x *ListTrustZonesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrustZonesResponse.ProtoReflect.Descriptor instead.
func (*ListTrustZonesResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *ListTrustZonesResponse) GetTrustZones() []*v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZones
	}
	return nil
}

type UpdateTrustZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustZone *v1alpha1.TrustZone `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3,oneof" json:"trust_zone,omitempty"`
}

func (x *UpdateTrustZoneRequest) Reset() {
	*x = UpdateTrustZoneRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTrustZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrustZoneRequest) ProtoMessage() {}

func (x *UpdateTrustZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrustZoneRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrustZoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTrustZoneRequest) GetTrustZone() *v1alpha1.TrustZone {
	if x != nil {
		return x.TrustZone
	}
	return nil
}

type UpdateTrustZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTrustZoneResponse) Reset() {
	*x = UpdateTrustZoneResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTrustZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrustZoneResponse) ProtoMessage() {}

func (x *UpdateTrustZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrustZoneResponse.ProtoReflect.Descriptor instead.
func (*UpdateTrustZoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{9}
}

type AddClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *v1alpha11.Cluster `protobuf:"bytes,1,opt,name=cluster,proto3,oneof" json:"cluster,omitempty"`
}

func (x *AddClusterRequest) Reset() {
	*x = AddClusterRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterRequest) ProtoMessage() {}

func (x *AddClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterRequest.ProtoReflect.Descriptor instead.
func (*AddClusterRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *AddClusterRequest) GetCluster() *v1alpha11.Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type AddClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *v1alpha11.Cluster `protobuf:"bytes,1,opt,name=cluster,proto3,oneof" json:"cluster,omitempty"`
}

func (x *AddClusterResponse) Reset() {
	*x = AddClusterResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterResponse) ProtoMessage() {}

func (x *AddClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterResponse.ProtoReflect.Descriptor instead.
func (*AddClusterResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *AddClusterResponse) GetCluster() *v1alpha11.Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type GetClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	TrustZone *string `protobuf:"bytes,2,opt,name=trust_zone,json=trustZone,proto3,oneof" json:"trust_zone,omitempty"`
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{12}
}

func (x *GetClusterRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetClusterRequest) GetTrustZone() string {
	if x != nil && x.TrustZone != nil {
		return *x.TrustZone
	}
	return ""
}

type GetClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *v1alpha11.Cluster `protobuf:"bytes,1,opt,name=cluster,proto3,oneof" json:"cluster,omitempty"`
}

func (x *GetClusterResponse) Reset() {
	*x = GetClusterResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterResponse) ProtoMessage() {}

func (x *GetClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterResponse.ProtoReflect.Descriptor instead.
func (*GetClusterResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *GetClusterResponse) GetCluster() *v1alpha11.Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type ListClustersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustZone *string `protobuf:"bytes,1,opt,name=trust_zone,json=trustZone,proto3,oneof" json:"trust_zone,omitempty"`
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *ListClustersRequest) GetTrustZone() string {
	if x != nil && x.TrustZone != nil {
		return *x.TrustZone
	}
	return ""
}

type ListClustersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*v1alpha11.Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *ListClustersResponse) GetClusters() []*v1alpha11.Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type AddAttestationPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *v1alpha12.AttestationPolicy `protobuf:"bytes,1,opt,name=policy,proto3,oneof" json:"policy,omitempty"`
}

func (x *AddAttestationPolicyRequest) Reset() {
	*x = AddAttestationPolicyRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAttestationPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAttestationPolicyRequest) ProtoMessage() {}

func (x *AddAttestationPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAttestationPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddAttestationPolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{16}
}

func (x *AddAttestationPolicyRequest) GetPolicy() *v1alpha12.AttestationPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type AddAttestationPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *v1alpha12.AttestationPolicy `protobuf:"bytes,1,opt,name=policy,proto3,oneof" json:"policy,omitempty"`
}

func (x *AddAttestationPolicyResponse) Reset() {
	*x = AddAttestationPolicyResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAttestationPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAttestationPolicyResponse) ProtoMessage() {}

func (x *AddAttestationPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAttestationPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddAttestationPolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{17}
}

func (x *AddAttestationPolicyResponse) GetPolicy() *v1alpha12.AttestationPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type GetAttestationPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *GetAttestationPolicyRequest) Reset() {
	*x = GetAttestationPolicyRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttestationPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttestationPolicyRequest) ProtoMessage() {}

func (x *GetAttestationPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttestationPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetAttestationPolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{18}
}

func (x *GetAttestationPolicyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetAttestationPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *v1alpha12.AttestationPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetAttestationPolicyResponse) Reset() {
	*x = GetAttestationPolicyResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttestationPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttestationPolicyResponse) ProtoMessage() {}

func (x *GetAttestationPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttestationPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetAttestationPolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{19}
}

func (x *GetAttestationPolicyResponse) GetPolicy() *v1alpha12.AttestationPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ListAttestationPoliciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAttestationPoliciesRequest) Reset() {
	*x = ListAttestationPoliciesRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAttestationPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttestationPoliciesRequest) ProtoMessage() {}

func (x *ListAttestationPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttestationPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListAttestationPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{20}
}

type ListAttestationPoliciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies []*v1alpha12.AttestationPolicy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *ListAttestationPoliciesResponse) Reset() {
	*x = ListAttestationPoliciesResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAttestationPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttestationPoliciesResponse) ProtoMessage() {}

func (x *ListAttestationPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttestationPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListAttestationPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{21}
}

func (x *ListAttestationPoliciesResponse) GetPolicies() []*v1alpha12.AttestationPolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type AddAPBindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binding *v1alpha13.APBinding `protobuf:"bytes,1,opt,name=binding,proto3,oneof" json:"binding,omitempty"`
}

func (x *AddAPBindingRequest) Reset() {
	*x = AddAPBindingRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAPBindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAPBindingRequest) ProtoMessage() {}

func (x *AddAPBindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAPBindingRequest.ProtoReflect.Descriptor instead.
func (*AddAPBindingRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{22}
}

func (x *AddAPBindingRequest) GetBinding() *v1alpha13.APBinding {
	if x != nil {
		return x.Binding
	}
	return nil
}

type AddAPBindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binding *v1alpha13.APBinding `protobuf:"bytes,1,opt,name=binding,proto3,oneof" json:"binding,omitempty"`
}

func (x *AddAPBindingResponse) Reset() {
	*x = AddAPBindingResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAPBindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAPBindingResponse) ProtoMessage() {}

func (x *AddAPBindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAPBindingResponse.ProtoReflect.Descriptor instead.
func (*AddAPBindingResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{23}
}

func (x *AddAPBindingResponse) GetBinding() *v1alpha13.APBinding {
	if x != nil {
		return x.Binding
	}
	return nil
}

type DestroyAPBindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binding *v1alpha13.APBinding `protobuf:"bytes,1,opt,name=binding,proto3,oneof" json:"binding,omitempty"`
}

func (x *DestroyAPBindingRequest) Reset() {
	*x = DestroyAPBindingRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyAPBindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyAPBindingRequest) ProtoMessage() {}

func (x *DestroyAPBindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyAPBindingRequest.ProtoReflect.Descriptor instead.
func (*DestroyAPBindingRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{24}
}

func (x *DestroyAPBindingRequest) GetBinding() *v1alpha13.APBinding {
	if x != nil {
		return x.Binding
	}
	return nil
}

type DestroyAPBindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DestroyAPBindingResponse) Reset() {
	*x = DestroyAPBindingResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyAPBindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyAPBindingResponse) ProtoMessage() {}

func (x *DestroyAPBindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyAPBindingResponse.ProtoReflect.Descriptor instead.
func (*DestroyAPBindingResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{25}
}

type AddFederationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Federation *v1alpha14.Federation `protobuf:"bytes,1,opt,name=federation,proto3,oneof" json:"federation,omitempty"`
}

func (x *AddFederationRequest) Reset() {
	*x = AddFederationRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFederationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFederationRequest) ProtoMessage() {}

func (x *AddFederationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFederationRequest.ProtoReflect.Descriptor instead.
func (*AddFederationRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{26}
}

func (x *AddFederationRequest) GetFederation() *v1alpha14.Federation {
	if x != nil {
		return x.Federation
	}
	return nil
}

type AddFederationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Federation *v1alpha14.Federation `protobuf:"bytes,1,opt,name=federation,proto3,oneof" json:"federation,omitempty"`
}

func (x *AddFederationResponse) Reset() {
	*x = AddFederationResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFederationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFederationResponse) ProtoMessage() {}

func (x *AddFederationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFederationResponse.ProtoReflect.Descriptor instead.
func (*AddFederationResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{27}
}

func (x *AddFederationResponse) GetFederation() *v1alpha14.Federation {
	if x != nil {
		return x.Federation
	}
	return nil
}

type ListFederationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFederationsRequest) Reset() {
	*x = ListFederationsRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFederationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFederationsRequest) ProtoMessage() {}

func (x *ListFederationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFederationsRequest.ProtoReflect.Descriptor instead.
func (*ListFederationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{28}
}

type ListFederationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Federations []*v1alpha14.Federation `protobuf:"bytes,1,rep,name=federations,proto3" json:"federations,omitempty"`
}

func (x *ListFederationsResponse) Reset() {
	*x = ListFederationsResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFederationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFederationsResponse) ProtoMessage() {}

func (x *ListFederationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFederationsResponse.ProtoReflect.Descriptor instead.
func (*ListFederationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{29}
}

func (x *ListFederationsResponse) GetFederations() []*v1alpha14.Federation {
	if x != nil {
		return x.Federations
	}
	return nil
}

type ListFederationsByTrustZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustZoneName *string `protobuf:"bytes,1,opt,name=trust_zone_name,json=trustZoneName,proto3,oneof" json:"trust_zone_name,omitempty"`
}

func (x *ListFederationsByTrustZoneRequest) Reset() {
	*x = ListFederationsByTrustZoneRequest{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFederationsByTrustZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFederationsByTrustZoneRequest) ProtoMessage() {}

func (x *ListFederationsByTrustZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFederationsByTrustZoneRequest.ProtoReflect.Descriptor instead.
func (*ListFederationsByTrustZoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{30}
}

func (x *ListFederationsByTrustZoneRequest) GetTrustZoneName() string {
	if x != nil && x.TrustZoneName != nil {
		return *x.TrustZoneName
	}
	return ""
}

type ListFederationsByTrustZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Federations []*v1alpha14.Federation `protobuf:"bytes,1,rep,name=federations,proto3" json:"federations,omitempty"`
}

func (x *ListFederationsByTrustZoneResponse) Reset() {
	*x = ListFederationsByTrustZoneResponse{}
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFederationsByTrustZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFederationsByTrustZoneResponse) ProtoMessage() {}

func (x *ListFederationsByTrustZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFederationsByTrustZoneResponse.ProtoReflect.Descriptor instead.
func (*ListFederationsByTrustZoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP(), []int{31}
}

func (x *ListFederationsByTrustZoneResponse) GetFederations() []*v1alpha14.Federation {
	if x != nil {
		return x.Federations
	}
	return nil
}

var File_proto_cofidectl_plugin_v1alpha1_plugin_proto protoreflect.FileDescriptor

var file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74,
	0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a,
	0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x70, 0x5f, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x6f, 0x0a, 0x14,
	0x41, 0x64, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x37, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x5f, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x73, 0x22, 0x71, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f,
	0x6e, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5f, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x22, 0x60, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x22, 0x68, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x60, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x48,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x53, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x7b, 0x0a,
	0x1b, 0x41, 0x64, 0x64, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x06,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x7c, 0x0a, 0x1c, 0x41, 0x64,
	0x64, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x48, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x3f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x20, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x1f, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x08,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x66,
	0x0a, 0x13, 0x41, 0x64, 0x64, 0x41, 0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x70, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07,
	0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x67, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x41, 0x50, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x50, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22,
	0x6a, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x41, 0x50, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x07, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x41, 0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x46, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x0a, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x15, 0x41, 0x64,
	0x64, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0a, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x18,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x64, 0x0a, 0x21,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x32, 0xfb, 0x10, 0x0a, 0x17, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a,
	0x08, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x34,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c,
	0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66,
	0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x34, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65,
	0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x36, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69,
	0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63,
	0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65,
	0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65,
	0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93,
	0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0c, 0x41, 0x64, 0x64,
	0x41, 0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x41,
	0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74,
	0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x41, 0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x41, 0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x41,
	0x50, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7e, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65,
	0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x84, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66,
	0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa5, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x49, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x66, 0x69, 0x64, 0x65, 0x2f, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x66, 0x69, 0x64, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescOnce sync.Once
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescData = file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDesc
)

func file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescGZIP() []byte {
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescOnce.Do(func() {
		file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescData)
	})
	return file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDescData
}

var file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_proto_cofidectl_plugin_v1alpha1_plugin_proto_goTypes = []any{
	(*ValidateRequest)(nil),                    // 0: proto.cofidectl_plugin.v1alpha1.ValidateRequest
	(*ValidateResponse)(nil),                   // 1: proto.cofidectl_plugin.v1alpha1.ValidateResponse
	(*AddTrustZoneRequest)(nil),                // 2: proto.cofidectl_plugin.v1alpha1.AddTrustZoneRequest
	(*AddTrustZoneResponse)(nil),               // 3: proto.cofidectl_plugin.v1alpha1.AddTrustZoneResponse
	(*GetTrustZoneRequest)(nil),                // 4: proto.cofidectl_plugin.v1alpha1.GetTrustZoneRequest
	(*GetTrustZoneResponse)(nil),               // 5: proto.cofidectl_plugin.v1alpha1.GetTrustZoneResponse
	(*ListTrustZonesRequest)(nil),              // 6: proto.cofidectl_plugin.v1alpha1.ListTrustZonesRequest
	(*ListTrustZonesResponse)(nil),             // 7: proto.cofidectl_plugin.v1alpha1.ListTrustZonesResponse
	(*UpdateTrustZoneRequest)(nil),             // 8: proto.cofidectl_plugin.v1alpha1.UpdateTrustZoneRequest
	(*UpdateTrustZoneResponse)(nil),            // 9: proto.cofidectl_plugin.v1alpha1.UpdateTrustZoneResponse
	(*AddClusterRequest)(nil),                  // 10: proto.cofidectl_plugin.v1alpha1.AddClusterRequest
	(*AddClusterResponse)(nil),                 // 11: proto.cofidectl_plugin.v1alpha1.AddClusterResponse
	(*GetClusterRequest)(nil),                  // 12: proto.cofidectl_plugin.v1alpha1.GetClusterRequest
	(*GetClusterResponse)(nil),                 // 13: proto.cofidectl_plugin.v1alpha1.GetClusterResponse
	(*ListClustersRequest)(nil),                // 14: proto.cofidectl_plugin.v1alpha1.ListClustersRequest
	(*ListClustersResponse)(nil),               // 15: proto.cofidectl_plugin.v1alpha1.ListClustersResponse
	(*AddAttestationPolicyRequest)(nil),        // 16: proto.cofidectl_plugin.v1alpha1.AddAttestationPolicyRequest
	(*AddAttestationPolicyResponse)(nil),       // 17: proto.cofidectl_plugin.v1alpha1.AddAttestationPolicyResponse
	(*GetAttestationPolicyRequest)(nil),        // 18: proto.cofidectl_plugin.v1alpha1.GetAttestationPolicyRequest
	(*GetAttestationPolicyResponse)(nil),       // 19: proto.cofidectl_plugin.v1alpha1.GetAttestationPolicyResponse
	(*ListAttestationPoliciesRequest)(nil),     // 20: proto.cofidectl_plugin.v1alpha1.ListAttestationPoliciesRequest
	(*ListAttestationPoliciesResponse)(nil),    // 21: proto.cofidectl_plugin.v1alpha1.ListAttestationPoliciesResponse
	(*AddAPBindingRequest)(nil),                // 22: proto.cofidectl_plugin.v1alpha1.AddAPBindingRequest
	(*AddAPBindingResponse)(nil),               // 23: proto.cofidectl_plugin.v1alpha1.AddAPBindingResponse
	(*DestroyAPBindingRequest)(nil),            // 24: proto.cofidectl_plugin.v1alpha1.DestroyAPBindingRequest
	(*DestroyAPBindingResponse)(nil),           // 25: proto.cofidectl_plugin.v1alpha1.DestroyAPBindingResponse
	(*AddFederationRequest)(nil),               // 26: proto.cofidectl_plugin.v1alpha1.AddFederationRequest
	(*AddFederationResponse)(nil),              // 27: proto.cofidectl_plugin.v1alpha1.AddFederationResponse
	(*ListFederationsRequest)(nil),             // 28: proto.cofidectl_plugin.v1alpha1.ListFederationsRequest
	(*ListFederationsResponse)(nil),            // 29: proto.cofidectl_plugin.v1alpha1.ListFederationsResponse
	(*ListFederationsByTrustZoneRequest)(nil),  // 30: proto.cofidectl_plugin.v1alpha1.ListFederationsByTrustZoneRequest
	(*ListFederationsByTrustZoneResponse)(nil), // 31: proto.cofidectl_plugin.v1alpha1.ListFederationsByTrustZoneResponse
	(*v1alpha1.TrustZone)(nil),                 // 32: proto.trust_zone.v1alpha1.TrustZone
	(*v1alpha11.Cluster)(nil),                  // 33: proto.cluster.v1alpha1.Cluster
	(*v1alpha12.AttestationPolicy)(nil),        // 34: proto.attestation_policy.v1alpha1.AttestationPolicy
	(*v1alpha13.APBinding)(nil),                // 35: proto.ap_binding.v1alpha1.APBinding
	(*v1alpha14.Federation)(nil),               // 36: proto.federation.v1alpha1.Federation
}
var file_proto_cofidectl_plugin_v1alpha1_plugin_proto_depIdxs = []int32{
	32, // 0: proto.cofidectl_plugin.v1alpha1.AddTrustZoneRequest.trust_zone:type_name -> proto.trust_zone.v1alpha1.TrustZone
	32, // 1: proto.cofidectl_plugin.v1alpha1.AddTrustZoneResponse.trust_zone:type_name -> proto.trust_zone.v1alpha1.TrustZone
	32, // 2: proto.cofidectl_plugin.v1alpha1.GetTrustZoneResponse.trust_zone:type_name -> proto.trust_zone.v1alpha1.TrustZone
	32, // 3: proto.cofidectl_plugin.v1alpha1.ListTrustZonesResponse.trust_zones:type_name -> proto.trust_zone.v1alpha1.TrustZone
	32, // 4: proto.cofidectl_plugin.v1alpha1.UpdateTrustZoneRequest.trust_zone:type_name -> proto.trust_zone.v1alpha1.TrustZone
	33, // 5: proto.cofidectl_plugin.v1alpha1.AddClusterRequest.cluster:type_name -> proto.cluster.v1alpha1.Cluster
	33, // 6: proto.cofidectl_plugin.v1alpha1.AddClusterResponse.cluster:type_name -> proto.cluster.v1alpha1.Cluster
	33, // 7: proto.cofidectl_plugin.v1alpha1.GetClusterResponse.cluster:type_name -> proto.cluster.v1alpha1.Cluster
	33, // 8: proto.cofidectl_plugin.v1alpha1.ListClustersResponse.clusters:type_name -> proto.cluster.v1alpha1.Cluster
	34, // 9: proto.cofidectl_plugin.v1alpha1.AddAttestationPolicyRequest.policy:type_name -> proto.attestation_policy.v1alpha1.AttestationPolicy
	34, // 10: proto.cofidectl_plugin.v1alpha1.AddAttestationPolicyResponse.policy:type_name -> proto.attestation_policy.v1alpha1.AttestationPolicy
	34, // 11: proto.cofidectl_plugin.v1alpha1.GetAttestationPolicyResponse.policy:type_name -> proto.attestation_policy.v1alpha1.AttestationPolicy
	34, // 12: proto.cofidectl_plugin.v1alpha1.ListAttestationPoliciesResponse.policies:type_name -> proto.attestation_policy.v1alpha1.AttestationPolicy
	35, // 13: proto.cofidectl_plugin.v1alpha1.AddAPBindingRequest.binding:type_name -> proto.ap_binding.v1alpha1.APBinding
	35, // 14: proto.cofidectl_plugin.v1alpha1.AddAPBindingResponse.binding:type_name -> proto.ap_binding.v1alpha1.APBinding
	35, // 15: proto.cofidectl_plugin.v1alpha1.DestroyAPBindingRequest.binding:type_name -> proto.ap_binding.v1alpha1.APBinding
	36, // 16: proto.cofidectl_plugin.v1alpha1.AddFederationRequest.federation:type_name -> proto.federation.v1alpha1.Federation
	36, // 17: proto.cofidectl_plugin.v1alpha1.AddFederationResponse.federation:type_name -> proto.federation.v1alpha1.Federation
	36, // 18: proto.cofidectl_plugin.v1alpha1.ListFederationsResponse.federations:type_name -> proto.federation.v1alpha1.Federation
	36, // 19: proto.cofidectl_plugin.v1alpha1.ListFederationsByTrustZoneResponse.federations:type_name -> proto.federation.v1alpha1.Federation
	0,  // 20: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.Validate:input_type -> proto.cofidectl_plugin.v1alpha1.ValidateRequest
	2,  // 21: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddTrustZone:input_type -> proto.cofidectl_plugin.v1alpha1.AddTrustZoneRequest
	4,  // 22: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.GetTrustZone:input_type -> proto.cofidectl_plugin.v1alpha1.GetTrustZoneRequest
	6,  // 23: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListTrustZones:input_type -> proto.cofidectl_plugin.v1alpha1.ListTrustZonesRequest
	8,  // 24: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.UpdateTrustZone:input_type -> proto.cofidectl_plugin.v1alpha1.UpdateTrustZoneRequest
	10, // 25: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddCluster:input_type -> proto.cofidectl_plugin.v1alpha1.AddClusterRequest
	12, // 26: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.GetCluster:input_type -> proto.cofidectl_plugin.v1alpha1.GetClusterRequest
	14, // 27: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListClusters:input_type -> proto.cofidectl_plugin.v1alpha1.ListClustersRequest
	16, // 28: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddAttestationPolicy:input_type -> proto.cofidectl_plugin.v1alpha1.AddAttestationPolicyRequest
	18, // 29: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.GetAttestationPolicy:input_type -> proto.cofidectl_plugin.v1alpha1.GetAttestationPolicyRequest
	20, // 30: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListAttestationPolicies:input_type -> proto.cofidectl_plugin.v1alpha1.ListAttestationPoliciesRequest
	22, // 31: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddAPBinding:input_type -> proto.cofidectl_plugin.v1alpha1.AddAPBindingRequest
	24, // 32: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.DestroyAPBinding:input_type -> proto.cofidectl_plugin.v1alpha1.DestroyAPBindingRequest
	26, // 33: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddFederation:input_type -> proto.cofidectl_plugin.v1alpha1.AddFederationRequest
	28, // 34: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListFederations:input_type -> proto.cofidectl_plugin.v1alpha1.ListFederationsRequest
	30, // 35: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListFederationsByTrustZone:input_type -> proto.cofidectl_plugin.v1alpha1.ListFederationsByTrustZoneRequest
	1,  // 36: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.Validate:output_type -> proto.cofidectl_plugin.v1alpha1.ValidateResponse
	3,  // 37: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddTrustZone:output_type -> proto.cofidectl_plugin.v1alpha1.AddTrustZoneResponse
	5,  // 38: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.GetTrustZone:output_type -> proto.cofidectl_plugin.v1alpha1.GetTrustZoneResponse
	7,  // 39: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListTrustZones:output_type -> proto.cofidectl_plugin.v1alpha1.ListTrustZonesResponse
	9,  // 40: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.UpdateTrustZone:output_type -> proto.cofidectl_plugin.v1alpha1.UpdateTrustZoneResponse
	11, // 41: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddCluster:output_type -> proto.cofidectl_plugin.v1alpha1.AddClusterResponse
	13, // 42: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.GetCluster:output_type -> proto.cofidectl_plugin.v1alpha1.GetClusterResponse
	15, // 43: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListClusters:output_type -> proto.cofidectl_plugin.v1alpha1.ListClustersResponse
	17, // 44: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddAttestationPolicy:output_type -> proto.cofidectl_plugin.v1alpha1.AddAttestationPolicyResponse
	19, // 45: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.GetAttestationPolicy:output_type -> proto.cofidectl_plugin.v1alpha1.GetAttestationPolicyResponse
	21, // 46: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListAttestationPolicies:output_type -> proto.cofidectl_plugin.v1alpha1.ListAttestationPoliciesResponse
	23, // 47: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddAPBinding:output_type -> proto.cofidectl_plugin.v1alpha1.AddAPBindingResponse
	25, // 48: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.DestroyAPBinding:output_type -> proto.cofidectl_plugin.v1alpha1.DestroyAPBindingResponse
	27, // 49: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.AddFederation:output_type -> proto.cofidectl_plugin.v1alpha1.AddFederationResponse
	29, // 50: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListFederations:output_type -> proto.cofidectl_plugin.v1alpha1.ListFederationsResponse
	31, // 51: proto.cofidectl_plugin.v1alpha1.DataSourcePluginService.ListFederationsByTrustZone:output_type -> proto.cofidectl_plugin.v1alpha1.ListFederationsByTrustZoneResponse
	36, // [36:52] is the sub-list for method output_type
	20, // [20:36] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_cofidectl_plugin_v1alpha1_plugin_proto_init() }
func file_proto_cofidectl_plugin_v1alpha1_plugin_proto_init() {
	if File_proto_cofidectl_plugin_v1alpha1_plugin_proto != nil {
		return
	}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[2].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[5].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[8].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[10].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[11].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[12].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[13].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[14].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[16].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[17].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[18].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[22].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[23].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[24].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[26].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[27].OneofWrappers = []any{}
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes[30].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cofidectl_plugin_v1alpha1_plugin_proto_goTypes,
		DependencyIndexes: file_proto_cofidectl_plugin_v1alpha1_plugin_proto_depIdxs,
		MessageInfos:      file_proto_cofidectl_plugin_v1alpha1_plugin_proto_msgTypes,
	}.Build()
	File_proto_cofidectl_plugin_v1alpha1_plugin_proto = out.File
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_rawDesc = nil
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_goTypes = nil
	file_proto_cofidectl_plugin_v1alpha1_plugin_proto_depIdxs = nil
}
