/**
 * @fileoverview gRPC-Web generated client stub for proto.connect.cluster_service.v1alpha1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: proto/connect/cluster_service/v1alpha1/cluster_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_connect_cluster_service_v1alpha1_cluster_service_pb from '../../../../proto/connect/cluster_service/v1alpha1/cluster_service_pb'; // proto import: "proto/connect/cluster_service/v1alpha1/cluster_service.proto"


export class ClusterServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateCluster = new grpcWeb.MethodDescriptor(
    '/proto.connect.cluster_service.v1alpha1.ClusterService/CreateCluster',
    grpcWeb.MethodType.UNARY,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterRequest,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterResponse,
    (request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterRequest) => {
      return request.serializeBinary();
    },
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterResponse.deserializeBinary
  );

  createCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterResponse>;

  createCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterResponse) => void): grpcWeb.ClientReadableStream<proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterResponse>;

  createCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.CreateClusterResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.connect.cluster_service.v1alpha1.ClusterService/CreateCluster',
        request,
        metadata || {},
        this.methodDescriptorCreateCluster,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.connect.cluster_service.v1alpha1.ClusterService/CreateCluster',
    request,
    metadata || {},
    this.methodDescriptorCreateCluster);
  }

  methodDescriptorDestroyCluster = new grpcWeb.MethodDescriptor(
    '/proto.connect.cluster_service.v1alpha1.ClusterService/DestroyCluster',
    grpcWeb.MethodType.UNARY,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterRequest,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterResponse,
    (request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterRequest) => {
      return request.serializeBinary();
    },
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterResponse.deserializeBinary
  );

  destroyCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterResponse>;

  destroyCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterResponse) => void): grpcWeb.ClientReadableStream<proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterResponse>;

  destroyCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.DestroyClusterResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.connect.cluster_service.v1alpha1.ClusterService/DestroyCluster',
        request,
        metadata || {},
        this.methodDescriptorDestroyCluster,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.connect.cluster_service.v1alpha1.ClusterService/DestroyCluster',
    request,
    metadata || {},
    this.methodDescriptorDestroyCluster);
  }

  methodDescriptorGetCluster = new grpcWeb.MethodDescriptor(
    '/proto.connect.cluster_service.v1alpha1.ClusterService/GetCluster',
    grpcWeb.MethodType.UNARY,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterRequest,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterResponse,
    (request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterRequest) => {
      return request.serializeBinary();
    },
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterResponse.deserializeBinary
  );

  getCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterResponse>;

  getCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterResponse) => void): grpcWeb.ClientReadableStream<proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterResponse>;

  getCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.GetClusterResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.connect.cluster_service.v1alpha1.ClusterService/GetCluster',
        request,
        metadata || {},
        this.methodDescriptorGetCluster,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.connect.cluster_service.v1alpha1.ClusterService/GetCluster',
    request,
    metadata || {},
    this.methodDescriptorGetCluster);
  }

  methodDescriptorListClusters = new grpcWeb.MethodDescriptor(
    '/proto.connect.cluster_service.v1alpha1.ClusterService/ListClusters',
    grpcWeb.MethodType.UNARY,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersRequest,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersResponse,
    (request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersRequest) => {
      return request.serializeBinary();
    },
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersResponse.deserializeBinary
  );

  listClusters(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersResponse>;

  listClusters(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersResponse) => void): grpcWeb.ClientReadableStream<proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersResponse>;

  listClusters(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.ListClustersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.connect.cluster_service.v1alpha1.ClusterService/ListClusters',
        request,
        metadata || {},
        this.methodDescriptorListClusters,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.connect.cluster_service.v1alpha1.ClusterService/ListClusters',
    request,
    metadata || {},
    this.methodDescriptorListClusters);
  }

  methodDescriptorUpdateCluster = new grpcWeb.MethodDescriptor(
    '/proto.connect.cluster_service.v1alpha1.ClusterService/UpdateCluster',
    grpcWeb.MethodType.UNARY,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterRequest,
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterResponse,
    (request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterRequest) => {
      return request.serializeBinary();
    },
    proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterResponse.deserializeBinary
  );

  updateCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterResponse>;

  updateCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterResponse) => void): grpcWeb.ClientReadableStream<proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterResponse>;

  updateCluster(
    request: proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_connect_cluster_service_v1alpha1_cluster_service_pb.UpdateClusterResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.connect.cluster_service.v1alpha1.ClusterService/UpdateCluster',
        request,
        metadata || {},
        this.methodDescriptorUpdateCluster,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.connect.cluster_service.v1alpha1.ClusterService/UpdateCluster',
    request,
    metadata || {},
    this.methodDescriptorUpdateCluster);
  }

}

