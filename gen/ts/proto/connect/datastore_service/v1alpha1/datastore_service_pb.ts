// Copyright 2025 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file proto/connect/datastore_service/v1alpha1/datastore_service.proto (package proto.connect.datastore_service.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { AttestedNode, Selector } from "./datastore_pb";
import { file_proto_connect_datastore_service_v1alpha1_datastore } from "./datastore_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/connect/datastore_service/v1alpha1/datastore_service.proto.
 */
export const file_proto_connect_datastore_service_v1alpha1_datastore_service: GenFile = /*@__PURE__*/
  fileDesc("CkBwcm90by9jb25uZWN0L2RhdGFzdG9yZV9zZXJ2aWNlL3YxYWxwaGExL2RhdGFzdG9yZV9zZXJ2aWNlLnByb3RvEihwcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExIkkKGUNvdW50QXR0ZXN0ZWROb2Rlc1JlcXVlc3QSGgoNdHJ1c3Rfem9uZV9pZBgBIAEoCUgAiAEBQhAKDl90cnVzdF96b25lX2lkIisKGkNvdW50QXR0ZXN0ZWROb2Rlc1Jlc3BvbnNlEg0KBWNvdW50GAEgASgFIo8BChlDcmVhdGVBdHRlc3RlZE5vZGVSZXF1ZXN0EkQKBG5vZGUYASABKAsyNi5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkF0dGVzdGVkTm9kZRIaCg10cnVzdF96b25lX2lkGAIgASgJSACIAQFCEAoOX3RydXN0X3pvbmVfaWQiYgoaQ3JlYXRlQXR0ZXN0ZWROb2RlUmVzcG9uc2USRAoEbm9kZRgBIAEoCzI2LnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuQXR0ZXN0ZWROb2RlIlwKGURlbGV0ZUF0dGVzdGVkTm9kZVJlcXVlc3QSEQoJc3BpZmZlX2lkGAEgASgJEhoKDXRydXN0X3pvbmVfaWQYAiABKAlIAIgBAUIQCg5fdHJ1c3Rfem9uZV9pZCJwChpEZWxldGVBdHRlc3RlZE5vZGVSZXNwb25zZRJJCgRub2RlGAEgASgLMjYucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5BdHRlc3RlZE5vZGVIAIgBAUIHCgVfbm9kZSJbChhGZXRjaEF0dGVzdGVkTm9kZVJlcXVlc3QSEQoJc3BpZmZlX2lkGAEgASgJEhoKDXRydXN0X3pvbmVfaWQYAiABKAlIAIgBAUIQCg5fdHJ1c3Rfem9uZV9pZCJvChlGZXRjaEF0dGVzdGVkTm9kZVJlc3BvbnNlEkkKBG5vZGUYASABKAsyNi5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkF0dGVzdGVkTm9kZUgAiAEBQgcKBV9ub2RlItkBChlVcGRhdGVBdHRlc3RlZE5vZGVSZXF1ZXN0EkQKBG5vZGUYASABKAsyNi5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkF0dGVzdGVkTm9kZRJICgRtYXNrGAIgASgLMjoucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5BdHRlc3RlZE5vZGVNYXNrEhoKDXRydXN0X3pvbmVfaWQYAyABKAlIAIgBAUIQCg5fdHJ1c3Rfem9uZV9pZCK3AQoQQXR0ZXN0ZWROb2RlTWFzaxIdChVhdHRlc3RhdGlvbl9kYXRhX3R5cGUYASABKAgSGgoSY2VydF9zZXJpYWxfbnVtYmVyGAIgASgIEhYKDmNlcnRfbm90X2FmdGVyGAMgASgIEh4KFm5ld19jZXJ0X3NlcmlhbF9udW1iZXIYBCABKAgSGgoSbmV3X2NlcnRfbm90X2FmdGVyGAUgASgIEhQKDGNhbl9yZWF0dGVzdBgHIAEoCCJwChpVcGRhdGVBdHRlc3RlZE5vZGVSZXNwb25zZRJJCgRub2RlGAEgASgLMjYucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5BdHRlc3RlZE5vZGVIAIgBAUIHCgVfbm9kZSKOBgoYTGlzdEF0dGVzdGVkTm9kZXNSZXF1ZXN0EiAKE2J5X2F0dGVzdGF0aW9uX3R5cGUYASABKAlIAIgBARIWCglieV9iYW5uZWQYAiABKAhIAYgBARIeChFieV9leHBpcmVzX2JlZm9yZRgDIAEoA0gCiAEBEm4KEWJ5X3NlbGVjdG9yX21hdGNoGAQgASgLMk4ucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5MaXN0QXR0ZXN0ZWROb2Rlc1JlcXVlc3QuQnlTZWxlY3RvcnNIA4gBARIcCg9mZXRjaF9zZWxlY3RvcnMYBSABKAhIBIgBARIcCg9ieV9jYW5fcmVhdHRlc3QYBiABKAhIBYgBARIaCg10cnVzdF96b25lX2lkGAcgASgJSAaIAQEatQEKC0J5U2VsZWN0b3JzEkUKCXNlbGVjdG9ycxgBIAMoCzIyLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuU2VsZWN0b3ISXwoFbWF0Y2gYAiABKA4yUC5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkxpc3RBdHRlc3RlZE5vZGVzUmVxdWVzdC5NYXRjaEJlaGF2aW9yIosBCg1NYXRjaEJlaGF2aW9yEiQKIE1BVENIX0JFSEFWSU9SX0VYQUNUX1VOU1BFQ0lGSUVEEAASGQoVTUFUQ0hfQkVIQVZJT1JfU1VCU0VUEAESGwoXTUFUQ0hfQkVIQVZJT1JfU1VQRVJTRVQQAhIcChhNQVRDSF9CRUhBVklPUl9NQVRDSF9BTlkQA0IWChRfYnlfYXR0ZXN0YXRpb25fdHlwZUIMCgpfYnlfYmFubmVkQhQKEl9ieV9leHBpcmVzX2JlZm9yZUIUChJfYnlfc2VsZWN0b3JfbWF0Y2hCEgoQX2ZldGNoX3NlbGVjdG9yc0ISChBfYnlfY2FuX3JlYXR0ZXN0QhAKDl90cnVzdF96b25lX2lkImIKGUxpc3RBdHRlc3RlZE5vZGVzUmVzcG9uc2USRQoFbm9kZXMYASADKAsyNi5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkF0dGVzdGVkTm9kZSJaChdHZXROb2RlU2VsZWN0b3JzUmVxdWVzdBIRCglzcGlmZmVfaWQYASABKAkSGgoNdHJ1c3Rfem9uZV9pZBgCIAEoCUgAiAEBQhAKDl90cnVzdF96b25lX2lkInQKGEdldE5vZGVTZWxlY3RvcnNSZXNwb25zZRIRCglzcGlmZmVfaWQYASABKAkSRQoJc2VsZWN0b3JzGAIgAygLMjIucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5TZWxlY3RvciKhAQoXU2V0Tm9kZVNlbGVjdG9yc1JlcXVlc3QSEQoJc3BpZmZlX2lkGAEgASgJEkUKCXNlbGVjdG9ycxgCIAMoCzIyLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuU2VsZWN0b3ISGgoNdHJ1c3Rfem9uZV9pZBgDIAEoCUgAiAEBQhAKDl90cnVzdF96b25lX2lkIhoKGFNldE5vZGVTZWxlY3RvcnNSZXNwb25zZSJsChhMaXN0Tm9kZVNlbGVjdG9yc1JlcXVlc3QSFQoIdmFsaWRfYXQYASABKANIAIgBARIaCg10cnVzdF96b25lX2lkGAIgASgJSAGIAQFCCwoJX3ZhbGlkX2F0QhAKDl90cnVzdF96b25lX2lkIuACChlMaXN0Tm9kZVNlbGVjdG9yc1Jlc3BvbnNlEmUKCXNlbGVjdG9ycxgBIAMoCzJSLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuTGlzdE5vZGVTZWxlY3RvcnNSZXNwb25zZS5TZWxlY3RvcnNFbnRyeRpWCg1Ob2RlU2VsZWN0b3JzEkUKCXNlbGVjdG9ycxgBIAMoCzIyLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuU2VsZWN0b3IagwEKDlNlbGVjdG9yc0VudHJ5EgsKA2tleRgBIAEoCRJgCgV2YWx1ZRgCIAEoCzJRLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuTGlzdE5vZGVTZWxlY3RvcnNSZXNwb25zZS5Ob2RlU2VsZWN0b3JzOgI4ATKvCwoQRGF0YVN0b3JlU2VydmljZRKfAQoSQ291bnRBdHRlc3RlZE5vZGVzEkMucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5Db3VudEF0dGVzdGVkTm9kZXNSZXF1ZXN0GkQucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5Db3VudEF0dGVzdGVkTm9kZXNSZXNwb25zZRKfAQoSQ3JlYXRlQXR0ZXN0ZWROb2RlEkMucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5DcmVhdGVBdHRlc3RlZE5vZGVSZXF1ZXN0GkQucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5DcmVhdGVBdHRlc3RlZE5vZGVSZXNwb25zZRKfAQoSRGVsZXRlQXR0ZXN0ZWROb2RlEkMucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5EZWxldGVBdHRlc3RlZE5vZGVSZXF1ZXN0GkQucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5EZWxldGVBdHRlc3RlZE5vZGVSZXNwb25zZRKcAQoRRmV0Y2hBdHRlc3RlZE5vZGUSQi5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkZldGNoQXR0ZXN0ZWROb2RlUmVxdWVzdBpDLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuRmV0Y2hBdHRlc3RlZE5vZGVSZXNwb25zZRKfAQoSVXBkYXRlQXR0ZXN0ZWROb2RlEkMucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5VcGRhdGVBdHRlc3RlZE5vZGVSZXF1ZXN0GkQucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5VcGRhdGVBdHRlc3RlZE5vZGVSZXNwb25zZRKcAQoRTGlzdEF0dGVzdGVkTm9kZXMSQi5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkxpc3RBdHRlc3RlZE5vZGVzUmVxdWVzdBpDLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuTGlzdEF0dGVzdGVkTm9kZXNSZXNwb25zZRKZAQoQR2V0Tm9kZVNlbGVjdG9ycxJBLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuR2V0Tm9kZVNlbGVjdG9yc1JlcXVlc3QaQi5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkdldE5vZGVTZWxlY3RvcnNSZXNwb25zZRKZAQoQU2V0Tm9kZVNlbGVjdG9ycxJBLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuU2V0Tm9kZVNlbGVjdG9yc1JlcXVlc3QaQi5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLlNldE5vZGVTZWxlY3RvcnNSZXNwb25zZRKcAQoRTGlzdE5vZGVTZWxlY3RvcnMSQi5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkxpc3ROb2RlU2VsZWN0b3JzUmVxdWVzdBpDLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuTGlzdE5vZGVTZWxlY3RvcnNSZXNwb25zZUJSWlBnaXRodWIuY29tL2NvZmlkZS9jb2ZpZGUtYXBpLXNkay9nZW4vZ28vcHJvdG8vY29ubmVjdC9kYXRhc3RvcmVfc2VydmljZS92MWFscGhhMWIGcHJvdG8z", [file_proto_connect_datastore_service_v1alpha1_datastore]);

/**
 * Node operations request/response messages
 *
 * @generated from message proto.connect.datastore_service.v1alpha1.CountAttestedNodesRequest
 */
export type CountAttestedNodesRequest = Message<"proto.connect.datastore_service.v1alpha1.CountAttestedNodesRequest"> & {
  /**
   * @generated from field: optional string trust_zone_id = 1;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.CountAttestedNodesRequest.
 * Use `create(CountAttestedNodesRequestSchema)` to create a new message.
 */
export const CountAttestedNodesRequestSchema: GenMessage<CountAttestedNodesRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 0);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.CountAttestedNodesResponse
 */
export type CountAttestedNodesResponse = Message<"proto.connect.datastore_service.v1alpha1.CountAttestedNodesResponse"> & {
  /**
   * @generated from field: int32 count = 1;
   */
  count: number;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.CountAttestedNodesResponse.
 * Use `create(CountAttestedNodesResponseSchema)` to create a new message.
 */
export const CountAttestedNodesResponseSchema: GenMessage<CountAttestedNodesResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 1);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.CreateAttestedNodeRequest
 */
export type CreateAttestedNodeRequest = Message<"proto.connect.datastore_service.v1alpha1.CreateAttestedNodeRequest"> & {
  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;

  /**
   * @generated from field: optional string trust_zone_id = 2;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.CreateAttestedNodeRequest.
 * Use `create(CreateAttestedNodeRequestSchema)` to create a new message.
 */
export const CreateAttestedNodeRequestSchema: GenMessage<CreateAttestedNodeRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 2);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.CreateAttestedNodeResponse
 */
export type CreateAttestedNodeResponse = Message<"proto.connect.datastore_service.v1alpha1.CreateAttestedNodeResponse"> & {
  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.CreateAttestedNodeResponse.
 * Use `create(CreateAttestedNodeResponseSchema)` to create a new message.
 */
export const CreateAttestedNodeResponseSchema: GenMessage<CreateAttestedNodeResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 3);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeRequest
 */
export type DeleteAttestedNodeRequest = Message<"proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeRequest"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;

  /**
   * @generated from field: optional string trust_zone_id = 2;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeRequest.
 * Use `create(DeleteAttestedNodeRequestSchema)` to create a new message.
 */
export const DeleteAttestedNodeRequestSchema: GenMessage<DeleteAttestedNodeRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 4);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeResponse
 */
export type DeleteAttestedNodeResponse = Message<"proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeResponse"> & {
  /**
   * @generated from field: optional proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeResponse.
 * Use `create(DeleteAttestedNodeResponseSchema)` to create a new message.
 */
export const DeleteAttestedNodeResponseSchema: GenMessage<DeleteAttestedNodeResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 5);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.FetchAttestedNodeRequest
 */
export type FetchAttestedNodeRequest = Message<"proto.connect.datastore_service.v1alpha1.FetchAttestedNodeRequest"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;

  /**
   * @generated from field: optional string trust_zone_id = 2;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.FetchAttestedNodeRequest.
 * Use `create(FetchAttestedNodeRequestSchema)` to create a new message.
 */
export const FetchAttestedNodeRequestSchema: GenMessage<FetchAttestedNodeRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 6);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.FetchAttestedNodeResponse
 */
export type FetchAttestedNodeResponse = Message<"proto.connect.datastore_service.v1alpha1.FetchAttestedNodeResponse"> & {
  /**
   * @generated from field: optional proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.FetchAttestedNodeResponse.
 * Use `create(FetchAttestedNodeResponseSchema)` to create a new message.
 */
export const FetchAttestedNodeResponseSchema: GenMessage<FetchAttestedNodeResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 7);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeRequest
 */
export type UpdateAttestedNodeRequest = Message<"proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeRequest"> & {
  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;

  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.AttestedNodeMask mask = 2;
   */
  mask?: AttestedNodeMask;

  /**
   * @generated from field: optional string trust_zone_id = 3;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeRequest.
 * Use `create(UpdateAttestedNodeRequestSchema)` to create a new message.
 */
export const UpdateAttestedNodeRequestSchema: GenMessage<UpdateAttestedNodeRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 8);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.AttestedNodeMask
 */
export type AttestedNodeMask = Message<"proto.connect.datastore_service.v1alpha1.AttestedNodeMask"> & {
  /**
   * @generated from field: bool attestation_data_type = 1;
   */
  attestationDataType: boolean;

  /**
   * @generated from field: bool cert_serial_number = 2;
   */
  certSerialNumber: boolean;

  /**
   * @generated from field: bool cert_not_after = 3;
   */
  certNotAfter: boolean;

  /**
   * @generated from field: bool new_cert_serial_number = 4;
   */
  newCertSerialNumber: boolean;

  /**
   * @generated from field: bool new_cert_not_after = 5;
   */
  newCertNotAfter: boolean;

  /**
   * @generated from field: bool can_reattest = 7;
   */
  canReattest: boolean;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.AttestedNodeMask.
 * Use `create(AttestedNodeMaskSchema)` to create a new message.
 */
export const AttestedNodeMaskSchema: GenMessage<AttestedNodeMask> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 9);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeResponse
 */
export type UpdateAttestedNodeResponse = Message<"proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeResponse"> & {
  /**
   * @generated from field: optional proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeResponse.
 * Use `create(UpdateAttestedNodeResponseSchema)` to create a new message.
 */
export const UpdateAttestedNodeResponseSchema: GenMessage<UpdateAttestedNodeResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 10);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest
 */
export type ListAttestedNodesRequest = Message<"proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest"> & {
  /**
   * Filters nodes by attestation type
   *
   * @generated from field: optional string by_attestation_type = 1;
   */
  byAttestationType?: string;

  /**
   * Filters nodes by banned status
   *
   * @generated from field: optional bool by_banned = 2;
   */
  byBanned?: boolean;

  /**
   * Filters nodes that expire before the specified timestamp
   *
   * @generated from field: optional int64 by_expires_before = 3;
   */
  byExpiresBefore?: bigint;

  /**
   * @generated from field: optional proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest.BySelectors by_selector_match = 4;
   */
  bySelectorMatch?: ListAttestedNodesRequest_BySelectors;

  /**
   * Whether to fetch selectors with nodes
   *
   * @generated from field: optional bool fetch_selectors = 5;
   */
  fetchSelectors?: boolean;

  /**
   * Filters nodes by ability to re-attest
   *
   * @generated from field: optional bool by_can_reattest = 6;
   */
  byCanReattest?: boolean;

  /**
   * @generated from field: optional string trust_zone_id = 7;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest.
 * Use `create(ListAttestedNodesRequestSchema)` to create a new message.
 */
export const ListAttestedNodesRequestSchema: GenMessage<ListAttestedNodesRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 11);

/**
 * Filters nodes by selectors
 *
 * @generated from message proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest.BySelectors
 */
export type ListAttestedNodesRequest_BySelectors = Message<"proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest.BySelectors"> & {
  /**
   * @generated from field: repeated proto.connect.datastore_service.v1alpha1.Selector selectors = 1;
   */
  selectors: Selector[];

  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest.MatchBehavior match = 2;
   */
  match: ListAttestedNodesRequest_MatchBehavior;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest.BySelectors.
 * Use `create(ListAttestedNodesRequest_BySelectorsSchema)` to create a new message.
 */
export const ListAttestedNodesRequest_BySelectorsSchema: GenMessage<ListAttestedNodesRequest_BySelectors> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 11, 0);

/**
 * @generated from enum proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest.MatchBehavior
 */
export enum ListAttestedNodesRequest_MatchBehavior {
  /**
   * @generated from enum value: MATCH_BEHAVIOR_EXACT_UNSPECIFIED = 0;
   */
  EXACT_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MATCH_BEHAVIOR_SUBSET = 1;
   */
  SUBSET = 1,

  /**
   * @generated from enum value: MATCH_BEHAVIOR_SUPERSET = 2;
   */
  SUPERSET = 2,

  /**
   * @generated from enum value: MATCH_BEHAVIOR_MATCH_ANY = 3;
   */
  MATCH_ANY = 3,
}

/**
 * Describes the enum proto.connect.datastore_service.v1alpha1.ListAttestedNodesRequest.MatchBehavior.
 */
export const ListAttestedNodesRequest_MatchBehaviorSchema: GenEnum<ListAttestedNodesRequest_MatchBehavior> = /*@__PURE__*/
  enumDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 11, 0);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.ListAttestedNodesResponse
 */
export type ListAttestedNodesResponse = Message<"proto.connect.datastore_service.v1alpha1.ListAttestedNodesResponse"> & {
  /**
   * @generated from field: repeated proto.connect.datastore_service.v1alpha1.AttestedNode nodes = 1;
   */
  nodes: AttestedNode[];
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.ListAttestedNodesResponse.
 * Use `create(ListAttestedNodesResponseSchema)` to create a new message.
 */
export const ListAttestedNodesResponseSchema: GenMessage<ListAttestedNodesResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 12);

/**
 * Node Selector operations request/response messages
 *
 * @generated from message proto.connect.datastore_service.v1alpha1.GetNodeSelectorsRequest
 */
export type GetNodeSelectorsRequest = Message<"proto.connect.datastore_service.v1alpha1.GetNodeSelectorsRequest"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;

  /**
   * @generated from field: optional string trust_zone_id = 2;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.GetNodeSelectorsRequest.
 * Use `create(GetNodeSelectorsRequestSchema)` to create a new message.
 */
export const GetNodeSelectorsRequestSchema: GenMessage<GetNodeSelectorsRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 13);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.GetNodeSelectorsResponse
 */
export type GetNodeSelectorsResponse = Message<"proto.connect.datastore_service.v1alpha1.GetNodeSelectorsResponse"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;

  /**
   * @generated from field: repeated proto.connect.datastore_service.v1alpha1.Selector selectors = 2;
   */
  selectors: Selector[];
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.GetNodeSelectorsResponse.
 * Use `create(GetNodeSelectorsResponseSchema)` to create a new message.
 */
export const GetNodeSelectorsResponseSchema: GenMessage<GetNodeSelectorsResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 14);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.SetNodeSelectorsRequest
 */
export type SetNodeSelectorsRequest = Message<"proto.connect.datastore_service.v1alpha1.SetNodeSelectorsRequest"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;

  /**
   * @generated from field: repeated proto.connect.datastore_service.v1alpha1.Selector selectors = 2;
   */
  selectors: Selector[];

  /**
   * @generated from field: optional string trust_zone_id = 3;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.SetNodeSelectorsRequest.
 * Use `create(SetNodeSelectorsRequestSchema)` to create a new message.
 */
export const SetNodeSelectorsRequestSchema: GenMessage<SetNodeSelectorsRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 15);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.SetNodeSelectorsResponse
 */
export type SetNodeSelectorsResponse = Message<"proto.connect.datastore_service.v1alpha1.SetNodeSelectorsResponse"> & {
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.SetNodeSelectorsResponse.
 * Use `create(SetNodeSelectorsResponseSchema)` to create a new message.
 */
export const SetNodeSelectorsResponseSchema: GenMessage<SetNodeSelectorsResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 16);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.ListNodeSelectorsRequest
 */
export type ListNodeSelectorsRequest = Message<"proto.connect.datastore_service.v1alpha1.ListNodeSelectorsRequest"> & {
  /**
   * @generated from field: optional int64 valid_at = 1;
   */
  validAt?: bigint;

  /**
   * @generated from field: optional string trust_zone_id = 2;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.ListNodeSelectorsRequest.
 * Use `create(ListNodeSelectorsRequestSchema)` to create a new message.
 */
export const ListNodeSelectorsRequestSchema: GenMessage<ListNodeSelectorsRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 17);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.ListNodeSelectorsResponse
 */
export type ListNodeSelectorsResponse = Message<"proto.connect.datastore_service.v1alpha1.ListNodeSelectorsResponse"> & {
  /**
   * @generated from field: map<string, proto.connect.datastore_service.v1alpha1.ListNodeSelectorsResponse.NodeSelectors> selectors = 1;
   */
  selectors: { [key: string]: ListNodeSelectorsResponse_NodeSelectors };
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.ListNodeSelectorsResponse.
 * Use `create(ListNodeSelectorsResponseSchema)` to create a new message.
 */
export const ListNodeSelectorsResponseSchema: GenMessage<ListNodeSelectorsResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 18);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.ListNodeSelectorsResponse.NodeSelectors
 */
export type ListNodeSelectorsResponse_NodeSelectors = Message<"proto.connect.datastore_service.v1alpha1.ListNodeSelectorsResponse.NodeSelectors"> & {
  /**
   * @generated from field: repeated proto.connect.datastore_service.v1alpha1.Selector selectors = 1;
   */
  selectors: Selector[];
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.ListNodeSelectorsResponse.NodeSelectors.
 * Use `create(ListNodeSelectorsResponse_NodeSelectorsSchema)` to create a new message.
 */
export const ListNodeSelectorsResponse_NodeSelectorsSchema: GenMessage<ListNodeSelectorsResponse_NodeSelectors> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 18, 0);

/**
 * DataStoreService defines the gRPC service for the SPIRE server DataStore interface
 *
 * @generated from service proto.connect.datastore_service.v1alpha1.DataStoreService
 */
export const DataStoreService: GenService<{
  /**
   * Node operations
   *
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.CountAttestedNodes
   */
  countAttestedNodes: {
    methodKind: "unary";
    input: typeof CountAttestedNodesRequestSchema;
    output: typeof CountAttestedNodesResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.CreateAttestedNode
   */
  createAttestedNode: {
    methodKind: "unary";
    input: typeof CreateAttestedNodeRequestSchema;
    output: typeof CreateAttestedNodeResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.DeleteAttestedNode
   */
  deleteAttestedNode: {
    methodKind: "unary";
    input: typeof DeleteAttestedNodeRequestSchema;
    output: typeof DeleteAttestedNodeResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.FetchAttestedNode
   */
  fetchAttestedNode: {
    methodKind: "unary";
    input: typeof FetchAttestedNodeRequestSchema;
    output: typeof FetchAttestedNodeResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.UpdateAttestedNode
   */
  updateAttestedNode: {
    methodKind: "unary";
    input: typeof UpdateAttestedNodeRequestSchema;
    output: typeof UpdateAttestedNodeResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.ListAttestedNodes
   */
  listAttestedNodes: {
    methodKind: "unary";
    input: typeof ListAttestedNodesRequestSchema;
    output: typeof ListAttestedNodesResponseSchema;
  },
  /**
   * Node Selector operations
   *
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.GetNodeSelectors
   */
  getNodeSelectors: {
    methodKind: "unary";
    input: typeof GetNodeSelectorsRequestSchema;
    output: typeof GetNodeSelectorsResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.SetNodeSelectors
   */
  setNodeSelectors: {
    methodKind: "unary";
    input: typeof SetNodeSelectorsRequestSchema;
    output: typeof SetNodeSelectorsResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.ListNodeSelectors
   */
  listNodeSelectors: {
    methodKind: "unary";
    input: typeof ListNodeSelectorsRequestSchema;
    output: typeof ListNodeSelectorsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 0);

