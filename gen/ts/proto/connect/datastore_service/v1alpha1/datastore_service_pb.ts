// Copyright 2025 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file proto/connect/datastore_service/v1alpha1/datastore_service.proto (package proto.connect.datastore_service.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { AttestedNode, Selector } from "./datastore_pb";
import { file_proto_connect_datastore_service_v1alpha1_datastore } from "./datastore_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/connect/datastore_service/v1alpha1/datastore_service.proto.
 */
export const file_proto_connect_datastore_service_v1alpha1_datastore_service: GenFile = /*@__PURE__*/
  fileDesc("CkBwcm90by9jb25uZWN0L2RhdGFzdG9yZV9zZXJ2aWNlL3YxYWxwaGExL2RhdGFzdG9yZV9zZXJ2aWNlLnByb3RvEihwcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExIhsKGUNvdW50QXR0ZXN0ZWROb2Rlc1JlcXVlc3QiKwoaQ291bnRBdHRlc3RlZE5vZGVzUmVzcG9uc2USDQoFY291bnQYASABKAUiYQoZQ3JlYXRlQXR0ZXN0ZWROb2RlUmVxdWVzdBJECgRub2RlGAEgASgLMjYucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5BdHRlc3RlZE5vZGUiYgoaQ3JlYXRlQXR0ZXN0ZWROb2RlUmVzcG9uc2USRAoEbm9kZRgBIAEoCzI2LnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuQXR0ZXN0ZWROb2RlIi4KGURlbGV0ZUF0dGVzdGVkTm9kZVJlcXVlc3QSEQoJc3BpZmZlX2lkGAEgASgJIhwKGkRlbGV0ZUF0dGVzdGVkTm9kZVJlc3BvbnNlIi0KGEZldGNoQXR0ZXN0ZWROb2RlUmVxdWVzdBIRCglzcGlmZmVfaWQYASABKAkiYQoZRmV0Y2hBdHRlc3RlZE5vZGVSZXNwb25zZRJECgRub2RlGAEgASgLMjYucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5BdHRlc3RlZE5vZGUiYQoZVXBkYXRlQXR0ZXN0ZWROb2RlUmVxdWVzdBJECgRub2RlGAEgASgLMjYucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5BdHRlc3RlZE5vZGUiYgoaVXBkYXRlQXR0ZXN0ZWROb2RlUmVzcG9uc2USRAoEbm9kZRgBIAEoCzI2LnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuQXR0ZXN0ZWROb2RlIiwKF0dldE5vZGVTZWxlY3RvcnNSZXF1ZXN0EhEKCXNwaWZmZV9pZBgBIAEoCSJ0ChhHZXROb2RlU2VsZWN0b3JzUmVzcG9uc2USEQoJc3BpZmZlX2lkGAEgASgJEkUKCXNlbGVjdG9ycxgCIAMoCzIyLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuU2VsZWN0b3IicwoXU2V0Tm9kZVNlbGVjdG9yc1JlcXVlc3QSEQoJc3BpZmZlX2lkGAEgASgJEkUKCXNlbGVjdG9ycxgCIAMoCzIyLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuU2VsZWN0b3IiGgoYU2V0Tm9kZVNlbGVjdG9yc1Jlc3BvbnNlMvEIChBEYXRhU3RvcmVTZXJ2aWNlEp8BChJDb3VudEF0dGVzdGVkTm9kZXMSQy5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkNvdW50QXR0ZXN0ZWROb2Rlc1JlcXVlc3QaRC5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkNvdW50QXR0ZXN0ZWROb2Rlc1Jlc3BvbnNlEp8BChJDcmVhdGVBdHRlc3RlZE5vZGUSQy5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkNyZWF0ZUF0dGVzdGVkTm9kZVJlcXVlc3QaRC5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkNyZWF0ZUF0dGVzdGVkTm9kZVJlc3BvbnNlEp8BChJEZWxldGVBdHRlc3RlZE5vZGUSQy5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkRlbGV0ZUF0dGVzdGVkTm9kZVJlcXVlc3QaRC5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLkRlbGV0ZUF0dGVzdGVkTm9kZVJlc3BvbnNlEpwBChFGZXRjaEF0dGVzdGVkTm9kZRJCLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuRmV0Y2hBdHRlc3RlZE5vZGVSZXF1ZXN0GkMucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5GZXRjaEF0dGVzdGVkTm9kZVJlc3BvbnNlEp8BChJVcGRhdGVBdHRlc3RlZE5vZGUSQy5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLlVwZGF0ZUF0dGVzdGVkTm9kZVJlcXVlc3QaRC5wcm90by5jb25uZWN0LmRhdGFzdG9yZV9zZXJ2aWNlLnYxYWxwaGExLlVwZGF0ZUF0dGVzdGVkTm9kZVJlc3BvbnNlEpkBChBHZXROb2RlU2VsZWN0b3JzEkEucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5HZXROb2RlU2VsZWN0b3JzUmVxdWVzdBpCLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuR2V0Tm9kZVNlbGVjdG9yc1Jlc3BvbnNlEpkBChBTZXROb2RlU2VsZWN0b3JzEkEucHJvdG8uY29ubmVjdC5kYXRhc3RvcmVfc2VydmljZS52MWFscGhhMS5TZXROb2RlU2VsZWN0b3JzUmVxdWVzdBpCLnByb3RvLmNvbm5lY3QuZGF0YXN0b3JlX3NlcnZpY2UudjFhbHBoYTEuU2V0Tm9kZVNlbGVjdG9yc1Jlc3BvbnNlQlJaUGdpdGh1Yi5jb20vY29maWRlL2NvZmlkZS1hcGktc2RrL2dlbi9nby9wcm90by9jb25uZWN0L2RhdGFzdG9yZV9zZXJ2aWNlL3YxYWxwaGExYgZwcm90bzM", [file_proto_connect_datastore_service_v1alpha1_datastore]);

/**
 * Node operations request/response messages
 *
 * @generated from message proto.connect.datastore_service.v1alpha1.CountAttestedNodesRequest
 */
export type CountAttestedNodesRequest = Message<"proto.connect.datastore_service.v1alpha1.CountAttestedNodesRequest"> & {
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.CountAttestedNodesRequest.
 * Use `create(CountAttestedNodesRequestSchema)` to create a new message.
 */
export const CountAttestedNodesRequestSchema: GenMessage<CountAttestedNodesRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 0);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.CountAttestedNodesResponse
 */
export type CountAttestedNodesResponse = Message<"proto.connect.datastore_service.v1alpha1.CountAttestedNodesResponse"> & {
  /**
   * @generated from field: int32 count = 1;
   */
  count: number;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.CountAttestedNodesResponse.
 * Use `create(CountAttestedNodesResponseSchema)` to create a new message.
 */
export const CountAttestedNodesResponseSchema: GenMessage<CountAttestedNodesResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 1);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.CreateAttestedNodeRequest
 */
export type CreateAttestedNodeRequest = Message<"proto.connect.datastore_service.v1alpha1.CreateAttestedNodeRequest"> & {
  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.CreateAttestedNodeRequest.
 * Use `create(CreateAttestedNodeRequestSchema)` to create a new message.
 */
export const CreateAttestedNodeRequestSchema: GenMessage<CreateAttestedNodeRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 2);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.CreateAttestedNodeResponse
 */
export type CreateAttestedNodeResponse = Message<"proto.connect.datastore_service.v1alpha1.CreateAttestedNodeResponse"> & {
  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.CreateAttestedNodeResponse.
 * Use `create(CreateAttestedNodeResponseSchema)` to create a new message.
 */
export const CreateAttestedNodeResponseSchema: GenMessage<CreateAttestedNodeResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 3);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeRequest
 */
export type DeleteAttestedNodeRequest = Message<"proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeRequest"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeRequest.
 * Use `create(DeleteAttestedNodeRequestSchema)` to create a new message.
 */
export const DeleteAttestedNodeRequestSchema: GenMessage<DeleteAttestedNodeRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 4);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeResponse
 */
export type DeleteAttestedNodeResponse = Message<"proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeResponse"> & {
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.DeleteAttestedNodeResponse.
 * Use `create(DeleteAttestedNodeResponseSchema)` to create a new message.
 */
export const DeleteAttestedNodeResponseSchema: GenMessage<DeleteAttestedNodeResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 5);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.FetchAttestedNodeRequest
 */
export type FetchAttestedNodeRequest = Message<"proto.connect.datastore_service.v1alpha1.FetchAttestedNodeRequest"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.FetchAttestedNodeRequest.
 * Use `create(FetchAttestedNodeRequestSchema)` to create a new message.
 */
export const FetchAttestedNodeRequestSchema: GenMessage<FetchAttestedNodeRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 6);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.FetchAttestedNodeResponse
 */
export type FetchAttestedNodeResponse = Message<"proto.connect.datastore_service.v1alpha1.FetchAttestedNodeResponse"> & {
  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.FetchAttestedNodeResponse.
 * Use `create(FetchAttestedNodeResponseSchema)` to create a new message.
 */
export const FetchAttestedNodeResponseSchema: GenMessage<FetchAttestedNodeResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 7);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeRequest
 */
export type UpdateAttestedNodeRequest = Message<"proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeRequest"> & {
  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeRequest.
 * Use `create(UpdateAttestedNodeRequestSchema)` to create a new message.
 */
export const UpdateAttestedNodeRequestSchema: GenMessage<UpdateAttestedNodeRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 8);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeResponse
 */
export type UpdateAttestedNodeResponse = Message<"proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeResponse"> & {
  /**
   * @generated from field: proto.connect.datastore_service.v1alpha1.AttestedNode node = 1;
   */
  node?: AttestedNode;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.UpdateAttestedNodeResponse.
 * Use `create(UpdateAttestedNodeResponseSchema)` to create a new message.
 */
export const UpdateAttestedNodeResponseSchema: GenMessage<UpdateAttestedNodeResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 9);

/**
 * Node Selector operations request/response messages
 *
 * @generated from message proto.connect.datastore_service.v1alpha1.GetNodeSelectorsRequest
 */
export type GetNodeSelectorsRequest = Message<"proto.connect.datastore_service.v1alpha1.GetNodeSelectorsRequest"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.GetNodeSelectorsRequest.
 * Use `create(GetNodeSelectorsRequestSchema)` to create a new message.
 */
export const GetNodeSelectorsRequestSchema: GenMessage<GetNodeSelectorsRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 10);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.GetNodeSelectorsResponse
 */
export type GetNodeSelectorsResponse = Message<"proto.connect.datastore_service.v1alpha1.GetNodeSelectorsResponse"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;

  /**
   * @generated from field: repeated proto.connect.datastore_service.v1alpha1.Selector selectors = 2;
   */
  selectors: Selector[];
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.GetNodeSelectorsResponse.
 * Use `create(GetNodeSelectorsResponseSchema)` to create a new message.
 */
export const GetNodeSelectorsResponseSchema: GenMessage<GetNodeSelectorsResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 11);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.SetNodeSelectorsRequest
 */
export type SetNodeSelectorsRequest = Message<"proto.connect.datastore_service.v1alpha1.SetNodeSelectorsRequest"> & {
  /**
   * @generated from field: string spiffe_id = 1;
   */
  spiffeId: string;

  /**
   * @generated from field: repeated proto.connect.datastore_service.v1alpha1.Selector selectors = 2;
   */
  selectors: Selector[];
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.SetNodeSelectorsRequest.
 * Use `create(SetNodeSelectorsRequestSchema)` to create a new message.
 */
export const SetNodeSelectorsRequestSchema: GenMessage<SetNodeSelectorsRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 12);

/**
 * @generated from message proto.connect.datastore_service.v1alpha1.SetNodeSelectorsResponse
 */
export type SetNodeSelectorsResponse = Message<"proto.connect.datastore_service.v1alpha1.SetNodeSelectorsResponse"> & {
};

/**
 * Describes the message proto.connect.datastore_service.v1alpha1.SetNodeSelectorsResponse.
 * Use `create(SetNodeSelectorsResponseSchema)` to create a new message.
 */
export const SetNodeSelectorsResponseSchema: GenMessage<SetNodeSelectorsResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 13);

/**
 * DataStoreService defines the gRPC service for the SPIRE server DataStore interface
 *
 * @generated from service proto.connect.datastore_service.v1alpha1.DataStoreService
 */
export const DataStoreService: GenService<{
  /**
   * Node operations
   *
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.CountAttestedNodes
   */
  countAttestedNodes: {
    methodKind: "unary";
    input: typeof CountAttestedNodesRequestSchema;
    output: typeof CountAttestedNodesResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.CreateAttestedNode
   */
  createAttestedNode: {
    methodKind: "unary";
    input: typeof CreateAttestedNodeRequestSchema;
    output: typeof CreateAttestedNodeResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.DeleteAttestedNode
   */
  deleteAttestedNode: {
    methodKind: "unary";
    input: typeof DeleteAttestedNodeRequestSchema;
    output: typeof DeleteAttestedNodeResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.FetchAttestedNode
   */
  fetchAttestedNode: {
    methodKind: "unary";
    input: typeof FetchAttestedNodeRequestSchema;
    output: typeof FetchAttestedNodeResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.UpdateAttestedNode
   */
  updateAttestedNode: {
    methodKind: "unary";
    input: typeof UpdateAttestedNodeRequestSchema;
    output: typeof UpdateAttestedNodeResponseSchema;
  },
  /**
   * Node Selector operations
   *
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.GetNodeSelectors
   */
  getNodeSelectors: {
    methodKind: "unary";
    input: typeof GetNodeSelectorsRequestSchema;
    output: typeof GetNodeSelectorsResponseSchema;
  },
  /**
   * @generated from rpc proto.connect.datastore_service.v1alpha1.DataStoreService.SetNodeSelectors
   */
  setNodeSelectors: {
    methodKind: "unary";
    input: typeof SetNodeSelectorsRequestSchema;
    output: typeof SetNodeSelectorsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_proto_connect_datastore_service_v1alpha1_datastore_service, 0);

