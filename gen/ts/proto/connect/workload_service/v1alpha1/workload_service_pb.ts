// Copyright 2025 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file proto/connect/workload_service/v1alpha1/workload_service.proto (package proto.connect.workload_service.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Workload } from "../../../workload/v1alpha1/workload_pb";
import { file_proto_workload_v1alpha1_workload } from "../../../workload/v1alpha1/workload_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/connect/workload_service/v1alpha1/workload_service.proto.
 */
export const file_proto_connect_workload_service_v1alpha1_workload_service: GenFile = /*@__PURE__*/
  fileDesc("Cj5wcm90by9jb25uZWN0L3dvcmtsb2FkX3NlcnZpY2UvdjFhbHBoYTEvd29ya2xvYWRfc2VydmljZS5wcm90bxIncHJvdG8uY29ubmVjdC53b3JrbG9hZF9zZXJ2aWNlLnYxYWxwaGExIlMKHFB1Ymxpc2hXb3JrbG9hZEV2ZW50c1JlcXVlc3QSMwoId29ya2xvYWQYASABKAsyIS5wcm90by53b3JrbG9hZC52MWFscGhhMS5Xb3JrbG9hZCJBCh1QdWJsaXNoV29ya2xvYWRFdmVudHNSZXNwb25zZRIUCgdtZXNzYWdlGAEgASgJSACIAQFCCgoIX21lc3NhZ2UyxwEKGldvcmtsb2FkT2JzZXJ2YXRpb25TZXJ2aWNlEqgBChVQdWJsaXNoV29ya2xvYWRFdmVudHMSRS5wcm90by5jb25uZWN0Lndvcmtsb2FkX3NlcnZpY2UudjFhbHBoYTEuUHVibGlzaFdvcmtsb2FkRXZlbnRzUmVxdWVzdBpGLnByb3RvLmNvbm5lY3Qud29ya2xvYWRfc2VydmljZS52MWFscGhhMS5QdWJsaXNoV29ya2xvYWRFdmVudHNSZXNwb25zZSgBQlFaT2dpdGh1Yi5jb20vY29maWRlL2NvZmlkZS1hcGktc2RrL2dlbi9nby9wcm90by9jb25uZWN0L3dvcmtsb2FkX3NlcnZpY2UvdjFhbHBoYTFiBnByb3RvMw", [file_proto_workload_v1alpha1_workload]);

/**
 * @generated from message proto.connect.workload_service.v1alpha1.PublishWorkloadEventsRequest
 */
export type PublishWorkloadEventsRequest = Message<"proto.connect.workload_service.v1alpha1.PublishWorkloadEventsRequest"> & {
  /**
   * @generated from field: proto.workload.v1alpha1.Workload workload = 1;
   */
  workload?: Workload;
};

/**
 * Describes the message proto.connect.workload_service.v1alpha1.PublishWorkloadEventsRequest.
 * Use `create(PublishWorkloadEventsRequestSchema)` to create a new message.
 */
export const PublishWorkloadEventsRequestSchema: GenMessage<PublishWorkloadEventsRequest> = /*@__PURE__*/
  messageDesc(file_proto_connect_workload_service_v1alpha1_workload_service, 0);

/**
 * @generated from message proto.connect.workload_service.v1alpha1.PublishWorkloadEventsResponse
 */
export type PublishWorkloadEventsResponse = Message<"proto.connect.workload_service.v1alpha1.PublishWorkloadEventsResponse"> & {
  /**
   * @generated from field: optional string message = 1;
   */
  message?: string;
};

/**
 * Describes the message proto.connect.workload_service.v1alpha1.PublishWorkloadEventsResponse.
 * Use `create(PublishWorkloadEventsResponseSchema)` to create a new message.
 */
export const PublishWorkloadEventsResponseSchema: GenMessage<PublishWorkloadEventsResponse> = /*@__PURE__*/
  messageDesc(file_proto_connect_workload_service_v1alpha1_workload_service, 1);

/**
 * @generated from service proto.connect.workload_service.v1alpha1.WorkloadObservationService
 */
export const WorkloadObservationService: GenService<{
  /**
   * @generated from rpc proto.connect.workload_service.v1alpha1.WorkloadObservationService.PublishWorkloadEvents
   */
  publishWorkloadEvents: {
    methodKind: "client_streaming";
    input: typeof PublishWorkloadEventsRequestSchema;
    output: typeof PublishWorkloadEventsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_proto_connect_workload_service_v1alpha1_workload_service, 0);

