// Copyright 2024 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file proto/attestation_policy/v1alpha1/attestation_policy.proto (package proto.attestation_policy.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Selector } from "../../spire/api/types/selector_pb";
import { file_proto_spire_api_types_selector } from "../../spire/api/types/selector_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/attestation_policy/v1alpha1/attestation_policy.proto.
 */
export const file_proto_attestation_policy_v1alpha1_attestation_policy: GenFile = /*@__PURE__*/
  fileDesc("Cjpwcm90by9hdHRlc3RhdGlvbl9wb2xpY3kvdjFhbHBoYTEvYXR0ZXN0YXRpb25fcG9saWN5LnByb3RvEiFwcm90by5hdHRlc3RhdGlvbl9wb2xpY3kudjFhbHBoYTEi6QEKEUF0dGVzdGF0aW9uUG9saWN5Eg8KAmlkGAQgASgJSAGIAQESDAoEbmFtZRgBIAEoCRITCgZvcmdfaWQYBSABKAlIAogBARJFCgprdWJlcm5ldGVzGAIgASgLMi8ucHJvdG8uYXR0ZXN0YXRpb25fcG9saWN5LnYxYWxwaGExLkFQS3ViZXJuZXRlc0gAEj0KBnN0YXRpYxgDIAEoCzIrLnByb3RvLmF0dGVzdGF0aW9uX3BvbGljeS52MWFscGhhMS5BUFN0YXRpY0gAQggKBnBvbGljeUIFCgNfaWRCCQoHX29yZ19pZCL2AQoMQVBLdWJlcm5ldGVzElMKEm5hbWVzcGFjZV9zZWxlY3RvchgBIAEoCzIyLnByb3RvLmF0dGVzdGF0aW9uX3BvbGljeS52MWFscGhhMS5BUExhYmVsU2VsZWN0b3JIAIgBARJNCgxwb2Rfc2VsZWN0b3IYAiABKAsyMi5wcm90by5hdHRlc3RhdGlvbl9wb2xpY3kudjFhbHBoYTEuQVBMYWJlbFNlbGVjdG9ySAGIAQESGgoSZG5zX25hbWVfdGVtcGxhdGVzGAMgAygJQhUKE19uYW1lc3BhY2Vfc2VsZWN0b3JCDwoNX3BvZF9zZWxlY3RvciLxAQoPQVBMYWJlbFNlbGVjdG9yElkKDG1hdGNoX2xhYmVscxgBIAMoCzJDLnByb3RvLmF0dGVzdGF0aW9uX3BvbGljeS52MWFscGhhMS5BUExhYmVsU2VsZWN0b3IuTWF0Y2hMYWJlbHNFbnRyeRJPChFtYXRjaF9leHByZXNzaW9ucxgCIAMoCzI0LnByb3RvLmF0dGVzdGF0aW9uX3BvbGljeS52MWFscGhhMS5BUE1hdGNoRXhwcmVzc2lvbhoyChBNYXRjaExhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiQgoRQVBNYXRjaEV4cHJlc3Npb24SCwoDa2V5GAEgASgJEhAKCG9wZXJhdG9yGAIgASgJEg4KBnZhbHVlcxgDIAMoCSJeCghBUFN0YXRpYxIWCglzcGlmZmVfaWQYASABKAlIAIgBARIsCglzZWxlY3RvcnMYAiADKAsyGS5zcGlyZS5hcGkudHlwZXMuU2VsZWN0b3JCDAoKX3NwaWZmZV9pZEJLWklnaXRodWIuY29tL2NvZmlkZS9jb2ZpZGUtYXBpLXNkay9nZW4vZ28vcHJvdG8vYXR0ZXN0YXRpb25fcG9saWN5L3YxYWxwaGExYgZwcm90bzM", [file_proto_spire_api_types_selector]);

/**
 * @generated from message proto.attestation_policy.v1alpha1.AttestationPolicy
 */
export type AttestationPolicy = Message<"proto.attestation_policy.v1alpha1.AttestationPolicy"> & {
  /**
   * @generated from field: optional string id = 4;
   */
  id?: string;

  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string org_id = 5;
   */
  orgId?: string;

  /**
   * @generated from oneof proto.attestation_policy.v1alpha1.AttestationPolicy.policy
   */
  policy: {
    /**
     * @generated from field: proto.attestation_policy.v1alpha1.APKubernetes kubernetes = 2;
     */
    value: APKubernetes;
    case: "kubernetes";
  } | {
    /**
     * @generated from field: proto.attestation_policy.v1alpha1.APStatic static = 3;
     */
    value: APStatic;
    case: "static";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message proto.attestation_policy.v1alpha1.AttestationPolicy.
 * Use `create(AttestationPolicySchema)` to create a new message.
 */
export const AttestationPolicySchema: GenMessage<AttestationPolicy> = /*@__PURE__*/
  messageDesc(file_proto_attestation_policy_v1alpha1_attestation_policy, 0);

/**
 * @generated from message proto.attestation_policy.v1alpha1.APKubernetes
 */
export type APKubernetes = Message<"proto.attestation_policy.v1alpha1.APKubernetes"> & {
  /**
   * @generated from field: optional proto.attestation_policy.v1alpha1.APLabelSelector namespace_selector = 1;
   */
  namespaceSelector?: APLabelSelector;

  /**
   * @generated from field: optional proto.attestation_policy.v1alpha1.APLabelSelector pod_selector = 2;
   */
  podSelector?: APLabelSelector;

  /**
   * @generated from field: repeated string dns_name_templates = 3;
   */
  dnsNameTemplates: string[];
};

/**
 * Describes the message proto.attestation_policy.v1alpha1.APKubernetes.
 * Use `create(APKubernetesSchema)` to create a new message.
 */
export const APKubernetesSchema: GenMessage<APKubernetes> = /*@__PURE__*/
  messageDesc(file_proto_attestation_policy_v1alpha1_attestation_policy, 1);

/**
 * This definition has been adapted from the LabelSelector message in Kubernetes.
 * https://github.com/kubernetes/apimachinery/blob/master/pkg/apis/meta/v1/generated.proto
 *
 * @generated from message proto.attestation_policy.v1alpha1.APLabelSelector
 */
export type APLabelSelector = Message<"proto.attestation_policy.v1alpha1.APLabelSelector"> & {
  /**
   * @generated from field: map<string, string> match_labels = 1;
   */
  matchLabels: { [key: string]: string };

  /**
   * @generated from field: repeated proto.attestation_policy.v1alpha1.APMatchExpression match_expressions = 2;
   */
  matchExpressions: APMatchExpression[];
};

/**
 * Describes the message proto.attestation_policy.v1alpha1.APLabelSelector.
 * Use `create(APLabelSelectorSchema)` to create a new message.
 */
export const APLabelSelectorSchema: GenMessage<APLabelSelector> = /*@__PURE__*/
  messageDesc(file_proto_attestation_policy_v1alpha1_attestation_policy, 2);

/**
 * @generated from message proto.attestation_policy.v1alpha1.APMatchExpression
 */
export type APMatchExpression = Message<"proto.attestation_policy.v1alpha1.APMatchExpression"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string operator = 2;
   */
  operator: string;

  /**
   * @generated from field: repeated string values = 3;
   */
  values: string[];
};

/**
 * Describes the message proto.attestation_policy.v1alpha1.APMatchExpression.
 * Use `create(APMatchExpressionSchema)` to create a new message.
 */
export const APMatchExpressionSchema: GenMessage<APMatchExpression> = /*@__PURE__*/
  messageDesc(file_proto_attestation_policy_v1alpha1_attestation_policy, 3);

/**
 * APStatic represents a static attestation policy
 *
 * @generated from message proto.attestation_policy.v1alpha1.APStatic
 */
export type APStatic = Message<"proto.attestation_policy.v1alpha1.APStatic"> & {
  /**
   * @generated from field: optional string spiffe_id = 1;
   */
  spiffeId?: string;

  /**
   * @generated from field: repeated spire.api.types.Selector selectors = 2;
   */
  selectors: Selector[];
};

/**
 * Describes the message proto.attestation_policy.v1alpha1.APStatic.
 * Use `create(APStaticSchema)` to create a new message.
 */
export const APStaticSchema: GenMessage<APStatic> = /*@__PURE__*/
  messageDesc(file_proto_attestation_policy_v1alpha1_attestation_policy, 4);

