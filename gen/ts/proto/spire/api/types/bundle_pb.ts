// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file proto/spire/api/types/bundle.proto (package spire.api.types, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/spire/api/types/bundle.proto.
 */
export const file_proto_spire_api_types_bundle: GenFile = /*@__PURE__*/
  fileDesc("CiJwcm90by9zcGlyZS9hcGkvdHlwZXMvYnVuZGxlLnByb3RvEg9zcGlyZS5hcGkudHlwZXMiuwEKBkJ1bmRsZRIUCgx0cnVzdF9kb21haW4YASABKAkSOgoQeDUwOV9hdXRob3JpdGllcxgCIAMoCzIgLnNwaXJlLmFwaS50eXBlcy5YNTA5Q2VydGlmaWNhdGUSMAoPand0X2F1dGhvcml0aWVzGAMgAygLMhcuc3BpcmUuYXBpLnR5cGVzLkpXVEtleRIUCgxyZWZyZXNoX2hpbnQYBCABKAMSFwoPc2VxdWVuY2VfbnVtYmVyGAUgASgEIjAKD1g1MDlDZXJ0aWZpY2F0ZRIMCgRhc24xGAEgASgMEg8KB3RhaW50ZWQYAiABKAgiUQoGSldUS2V5EhIKCnB1YmxpY19rZXkYASABKAwSDgoGa2V5X2lkGAIgASgJEhIKCmV4cGlyZXNfYXQYAyABKAMSDwoHdGFpbnRlZBgEIAEoCCJuCgpCdW5kbGVNYXNrEhgKEHg1MDlfYXV0aG9yaXRpZXMYAiABKAgSFwoPand0X2F1dGhvcml0aWVzGAMgASgIEhQKDHJlZnJlc2hfaGludBgEIAEoCBIXCg9zZXF1ZW5jZV9udW1iZXIYBSABKAhCN1o1Z2l0aHViLmNvbS9zcGlmZmUvc3BpcmUtYXBpLXNkay9wcm90by9zcGlyZS9hcGkvdHlwZXNiBnByb3RvMw");

/**
 * @generated from message spire.api.types.Bundle
 */
export type Bundle = Message<"spire.api.types.Bundle"> & {
  /**
   * The name of the trust domain the bundle belongs to (e.g., "example.org").
   *
   * @generated from field: string trust_domain = 1;
   */
  trustDomain: string;

  /**
   * X.509 authorities for authenticating X509-SVIDs.
   *
   * @generated from field: repeated spire.api.types.X509Certificate x509_authorities = 2;
   */
  x509Authorities: X509Certificate[];

  /**
   * JWT authorities for authenticating JWT-SVIDs.
   *
   * @generated from field: repeated spire.api.types.JWTKey jwt_authorities = 3;
   */
  jwtAuthorities: JWTKey[];

  /**
   * A hint on how often the bundle should be refreshed from the bundle
   * provider, in seconds. Can be zero (meaning no hint available).
   *
   * @generated from field: int64 refresh_hint = 4;
   */
  refreshHint: bigint;

  /**
   * The sequence number of the bundle.
   *
   * @generated from field: uint64 sequence_number = 5;
   */
  sequenceNumber: bigint;
};

/**
 * Describes the message spire.api.types.Bundle.
 * Use `create(BundleSchema)` to create a new message.
 */
export const BundleSchema: GenMessage<Bundle> = /*@__PURE__*/
  messageDesc(file_proto_spire_api_types_bundle, 0);

/**
 * @generated from message spire.api.types.X509Certificate
 */
export type X509Certificate = Message<"spire.api.types.X509Certificate"> & {
  /**
   * The ASN.1 DER encoded bytes of the X.509 certificate.
   *
   * @generated from field: bytes asn1 = 1;
   */
  asn1: Uint8Array;

  /**
   * This authority is no longer secure and must not be used.
   *
   * @generated from field: bool tainted = 2;
   */
  tainted: boolean;
};

/**
 * Describes the message spire.api.types.X509Certificate.
 * Use `create(X509CertificateSchema)` to create a new message.
 */
export const X509CertificateSchema: GenMessage<X509Certificate> = /*@__PURE__*/
  messageDesc(file_proto_spire_api_types_bundle, 1);

/**
 * @generated from message spire.api.types.JWTKey
 */
export type JWTKey = Message<"spire.api.types.JWTKey"> & {
  /**
   * The PKIX encoded public key.
   *
   * @generated from field: bytes public_key = 1;
   */
  publicKey: Uint8Array;

  /**
   * The key identifier.
   *
   * @generated from field: string key_id = 2;
   */
  keyId: string;

  /**
   * When the key expires (seconds since Unix epoch). If zero, the key does
   * not expire.
   *
   * @generated from field: int64 expires_at = 3;
   */
  expiresAt: bigint;

  /**
   * This authority is no longer secure and must not be used
   *
   * @generated from field: bool tainted = 4;
   */
  tainted: boolean;
};

/**
 * Describes the message spire.api.types.JWTKey.
 * Use `create(JWTKeySchema)` to create a new message.
 */
export const JWTKeySchema: GenMessage<JWTKey> = /*@__PURE__*/
  messageDesc(file_proto_spire_api_types_bundle, 2);

/**
 * @generated from message spire.api.types.BundleMask
 */
export type BundleMask = Message<"spire.api.types.BundleMask"> & {
  /**
   * x509_authorities field mask.
   *
   * @generated from field: bool x509_authorities = 2;
   */
  x509Authorities: boolean;

  /**
   * jwt_authorities field mask.
   *
   * @generated from field: bool jwt_authorities = 3;
   */
  jwtAuthorities: boolean;

  /**
   * refresh_hint field mask.
   *
   * @generated from field: bool refresh_hint = 4;
   */
  refreshHint: boolean;

  /**
   * sequence_number field mask.
   *
   * @generated from field: bool sequence_number = 5;
   */
  sequenceNumber: boolean;
};

/**
 * Describes the message spire.api.types.BundleMask.
 * Use `create(BundleMaskSchema)` to create a new message.
 */
export const BundleMaskSchema: GenMessage<BundleMask> = /*@__PURE__*/
  messageDesc(file_proto_spire_api_types_bundle, 3);

