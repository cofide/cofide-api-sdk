// Copyright 2025 Cofide Limited.
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file proto/identity/v1alpha1/identity.proto (package proto.identity.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/identity/v1alpha1/identity.proto.
 */
export const file_proto_identity_v1alpha1_identity: GenFile = /*@__PURE__*/
  fileDesc("CiZwcm90by9pZGVudGl0eS92MWFscGhhMS9pZGVudGl0eS5wcm90bxIXcHJvdG8uaWRlbnRpdHkudjFhbHBoYTEi6gIKCElkZW50aXR5EgoKAmlkGAEgASgJEg4KBm9yZ19pZBgCIAEoCRIVCg10cnVzdF96b25lX2lkGAMgASgJEhIKCmNsdXN0ZXJfaWQYBCABKAkSHQoVYXR0ZXN0YXRpb25fcG9saWN5X2lkGAUgASgJEhUKDWFwX2JpbmRpbmdfaWQYBiABKAkSEwoLd29ya2xvYWRfaWQYByABKAkSEQoJc3BpZmZlX2lkGAggASgJEhEKCXBhcmVudF9pZBgJIAEoCRI0CglzZWxlY3RvcnMYCiADKAsyIS5wcm90by5pZGVudGl0eS52MWFscGhhMS5TZWxlY3RvchJACgtmZWRlcmF0aW9ucxgLIAMoCzIrLnByb3RvLmlkZW50aXR5LnYxYWxwaGExLklkZW50aXR5RmVkZXJhdGlvbhIuCgpjcmVhdGVkX2F0GAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCInCghTZWxlY3RvchIMCgR0eXBlGAEgASgJEg0KBXZhbHVlGAIgASgJIkIKEklkZW50aXR5RmVkZXJhdGlvbhIaCg10cnVzdF96b25lX2lkGAEgASgJSACIAQFCEAoOX3RydXN0X3pvbmVfaWRCQVo/Z2l0aHViLmNvbS9jb2ZpZGUvY29maWRlLWFwaS1zZGsvZ2VuL2dvL3Byb3RvL2lkZW50aXR5L3YxYWxwaGExYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message proto.identity.v1alpha1.Identity
 */
export type Identity = Message<"proto.identity.v1alpha1.Identity"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * @generated from field: string trust_zone_id = 3;
   */
  trustZoneId: string;

  /**
   * @generated from field: string cluster_id = 4;
   */
  clusterId: string;

  /**
   * @generated from field: string attestation_policy_id = 5;
   */
  attestationPolicyId: string;

  /**
   * @generated from field: string ap_binding_id = 6;
   */
  apBindingId: string;

  /**
   * @generated from field: string workload_id = 7;
   */
  workloadId: string;

  /**
   * @generated from field: string spiffe_id = 8;
   */
  spiffeId: string;

  /**
   * @generated from field: string parent_id = 9;
   */
  parentId: string;

  /**
   * @generated from field: repeated proto.identity.v1alpha1.Selector selectors = 10;
   */
  selectors: Selector[];

  /**
   * @generated from field: repeated proto.identity.v1alpha1.IdentityFederation federations = 11;
   */
  federations: IdentityFederation[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 12;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message proto.identity.v1alpha1.Identity.
 * Use `create(IdentitySchema)` to create a new message.
 */
export const IdentitySchema: GenMessage<Identity> = /*@__PURE__*/
  messageDesc(file_proto_identity_v1alpha1_identity, 0);

/**
 * @generated from message proto.identity.v1alpha1.Selector
 */
export type Selector = Message<"proto.identity.v1alpha1.Selector"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message proto.identity.v1alpha1.Selector.
 * Use `create(SelectorSchema)` to create a new message.
 */
export const SelectorSchema: GenMessage<Selector> = /*@__PURE__*/
  messageDesc(file_proto_identity_v1alpha1_identity, 1);

/**
 * @generated from message proto.identity.v1alpha1.IdentityFederation
 */
export type IdentityFederation = Message<"proto.identity.v1alpha1.IdentityFederation"> & {
  /**
   * @generated from field: optional string trust_zone_id = 1;
   */
  trustZoneId?: string;
};

/**
 * Describes the message proto.identity.v1alpha1.IdentityFederation.
 * Use `create(IdentityFederationSchema)` to create a new message.
 */
export const IdentityFederationSchema: GenMessage<IdentityFederation> = /*@__PURE__*/
  messageDesc(file_proto_identity_v1alpha1_identity, 2);

